<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://wiki.ethanppl.com/blog</id>
    <title>Ethan's Wiki Blog</title>
    <updated>2024-09-08T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://wiki.ethanppl.com/blog"/>
    <subtitle>Ethan's Wiki Blog</subtitle>
    <icon>https://wiki.ethanppl.com/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[How I use keyd to remap my keyboard in Ubuntu 22.04 with Wayland]]></title>
        <id>https://wiki.ethanppl.com/blog/2024/09/08/keyd</id>
        <link href="https://wiki.ethanppl.com/blog/2024/09/08/keyd"/>
        <updated>2024-09-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Think about how you use your keyboard. Imagine how good it would be if your]]></summary>
        <content type="html"><![CDATA[<p>Think about how you use your keyboard. Imagine how good it would be if your
<code>CapsLock</code> can be used as <code>Ctrl</code>, how much better it would be for your left
pinky? That is the power of remapping the keyboard. It means you can customize
the functionality of each key on your keyboard.</p>
<p>This is a walkthrough of my setup in Ubuntu using <code>keyd</code>. A guide I wish it
existed when I first try to find out how to remap my keyboard in Ubuntu.</p>
<p><img decoding="async" loading="lazy" src="https://imgs.xkcd.com/comics/borrow_your_laptop.png" alt="xkcd 1806" class="img_ev3q"></p>
<p><em><a href="https://xkcd.com/1806/" target="_blank" rel="noopener noreferrer">xkcd 1806: borrow your laptop</a></em></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="why-i-remap-my-keyboard">Why I Remap my Keyboard<a href="https://wiki.ethanppl.com/blog/2024/09/08/keyd#why-i-remap-my-keyboard" class="hash-link" aria-label="Direct link to Why I Remap my Keyboard" title="Direct link to Why I Remap my Keyboard">​</a></h2>
<p>After I <a href="https://wiki.ethanppl.com/blog/2024/02/29/dual-boot-guide">dual-boot with Ubuntu</a> and used it as
my daily driver for work and personal use, one key thing I missed is
<a href="https://www.autohotkey.com/" target="_blank" rel="noopener noreferrer">AutoHotkey</a>. It is a software that I used to remap
my keyboard in Windows and create shortcuts and "hotstrings". For example,</p>
<ul>
<li>Remapping <code>CapsLock</code> to <code>Ctrl</code> on hold, but works as <code>Esc</code> when clicked alone</li>
<li><code>z+d</code> to scroll down and <code>z+u</code> to scroll up, and other ways to move my mouse</li>
<li><code>z+e</code> and <code>z+g</code> to insert my email addresses</li>
<li><code>|!=</code>, <code>|-&gt;</code>, <code>|&lt;-</code> will be replaced by not equal (≠), right arrow (→) and
left arrow (←), etc., automatically</li>
</ul>
<p>I shared
<a href="https://github.com/ethanppl/ahk" target="_blank" rel="noopener noreferrer">my AHK configuration in this repository</a> if
you are interested. I might write about it later too.</p>
<p>I think remapping keyboard is one of the most important change I made to my
laptop ever since I know how to use a computer. It is like the first time you
discovered you can use <code>Ctrl+C</code> rather than right click and select copy. I
highly encourage everyone to try it, especially for keys like <code>CapsLock</code> that is
in a very convenient location but is rarely used.</p>
<p>So once I boot to Ubuntu, the first thing I wanted to do is to replicate this
setup. Unfortunately, AHK only works for Windows, so I need to look for
alternatives. The first difficulty that you might face as well is Ubuntu 22.04
by default uses <a href="https://en.wikipedia.org/wiki/Wayland_(protocol)" target="_blank" rel="noopener noreferrer">Wayland</a> as
the window system, but a lot of tools available online works for
<a href="https://en.wikipedia.org/wiki/X_Window_System" target="_blank" rel="noopener noreferrer">X11</a> only. For example, there is
<a href="https://github.com/autokey/autokey" target="_blank" rel="noopener noreferrer">AutoKey</a> that seems to be popular but only
works for X11.</p>
<p>I first tried <a href="https://github.com/sezanzeb/input-remapper" target="_blank" rel="noopener noreferrer"><code>input-remapper</code></a>. It
looks promising with nice graphical user interface, but it didn't work out when
I tried to add more complicated logics. I also tried
<a href="https://github.com/boppreh/keyboard" target="_blank" rel="noopener noreferrer">keyboard</a>, a Python module which allows me
to create custom keyboard events in Python code. It's like coding my own daemon,
but I found it too much overhead and quite laggy. In the end, I found
<a href="https://wiki.archlinux.org/title/Input_remap_utilities" target="_blank" rel="noopener noreferrer">a list of input remapping utilities</a>
provided by Arch Linux wiki. Going through the list and I chose
<a href="https://github.com/rvaiya/keyd" target="_blank" rel="noopener noreferrer"><code>keyd</code></a> which works for me quite well over the
past year.</p>
<p>If you are using Windows, you can check
<a href="https://www.autohotkey.com/" target="_blank" rel="noopener noreferrer">AutoHotkey</a> as linked above. If you are on Mac, I
read that
<a href="https://karabiner-elements.pqrs.org/docs/getting-started/features/" target="_blank" rel="noopener noreferrer">Karabiner</a>
is good, but I have not used a Mac before. If your keyboard supports it,
<a href="https://docs.qmk.fm/#/newbs" target="_blank" rel="noopener noreferrer">QMK</a>/<a href="https://www.caniusevia.com/docs/specification" target="_blank" rel="noopener noreferrer">VIA</a>
might be good for you. Even if <code>keyd</code> doesn't work for you, you may follow along
to get some inspiration even though the syntax of the config is not the same.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="basic-concepts-in-keyd">Basic Concepts in <code>keyd</code><a href="https://wiki.ethanppl.com/blog/2024/09/08/keyd#basic-concepts-in-keyd" class="hash-link" aria-label="Direct link to basic-concepts-in-keyd" title="Direct link to basic-concepts-in-keyd">​</a></h2>
<p>The very first thing to understand in <code>keyd</code> config is it operates in terms of
layers. The most intuitive way for me to understand a layer is the <code>Shift</code> key.
When the <code>Shift</code> key is pressed and hold, a different layer is activated and all
the keys on your keyboard have a different meaning. And what <code>keyd</code> allows you
to do is to define custom layers, that is, defining how the layers are activated
and deactivated, and what each key means in each of the defined layer.</p>
<p>The major reason I select <code>keyd</code> is it works in X, sway and gnome in Wayland.
Second, it natively supports key overloading, which allows me to configure the
<code>CapsLock</code> key to behave as <code>Ctrl</code> on hold while <code>Esc</code> when tapped. From what I
test, it is instant and fast too.</p>
<p>To get started, install <code>keyd</code> from source. Clone
<a href="https://github.com/rvaiya/keyd" target="_blank" rel="noopener noreferrer">the repository</a> and build it from source.
Follow the instructions in the
<a href="https://github.com/rvaiya/keyd?tab=readme-ov-file#from-source" target="_blank" rel="noopener noreferrer">README</a> to
install it.</p>
<p>Here are some helpful commands to know:</p>
<ul>
<li><code>sudo systemctl enable keyd</code>: start <code>keyd</code>, probably run it once in your
lifetime</li>
<li><code>sudo keyd reload</code>: reload the config every time after you edit the config</li>
<li><code>sudo keyd monitor</code>: print key events, useful to debug what is remapped</li>
<li><code>keyd list-keys</code>: list all the valid key names, useful to check the
possibilities</li>
<li><code>backspace+escape+enter</code> keyboard combo: terminate <code>keyd</code> anywhere anytime in
case you severely messed up (happened once to me)</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sharing-my-configuration">Sharing my Configuration<a href="https://wiki.ethanppl.com/blog/2024/09/08/keyd#sharing-my-configuration" class="hash-link" aria-label="Direct link to Sharing my Configuration" title="Direct link to Sharing my Configuration">​</a></h2>
<p>Here is the full config if you are interested. I will explain it line by line
below.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[ids]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[main]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Maps capslock to escape when pressed and control when held.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">capslock = overload(control, esc)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Maps z to a custom layer, but just 'z' when pressed.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">z = overload(z, z)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Shift layer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[shift:S]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">## shift+capslock is capslock</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">capslock = capslock</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Custom z layer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[z]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">## Escape common patterns</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">i = macro(zi)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">o = macro(zo)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">## Emails</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">e = macro(hi@ethanppl.com)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">g = macro(hi@ethanppl.com)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">## Simplify complicated shortcut keys</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">v = C-S-v</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">n = C-S-a</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">x = A-f4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">s = command(systemctl suspend)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">## Arrows</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">j = down</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">k = up</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">h = left</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">l = right</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">## Media / modifier</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">m = oneshot(media)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[media]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">j = previoussong</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">k = playpause</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">l = nextsong</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">a = macro({ enter 10ms "Aut 10ms hor 10ms iza 10ms tio 10ms n": space "Bea 10ms rer space C-v)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="main-layer">Main layer<a href="https://wiki.ethanppl.com/blog/2024/09/08/keyd#main-layer" class="hash-link" aria-label="Direct link to Main layer" title="Direct link to Main layer">​</a></h3>
<p>Let's go through it line by line.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">capslock = overload(control, esc)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This is the most important feature that I need, as introduced in the beginning.
According to the man page, <code>overload(&lt;layer&gt;, &lt;action&gt;)</code> "activates the layer on
hold while executes the action on tap". This line means <code>CapsLock</code> will act like
<code>Ctrl</code> when used with other keys. But when I tap it only, it works as <code>Esc</code>.
This makes key combo like <code>Ctrl+C</code> way easier than before, where the <code>Ctrl</code> key
is in the bottom left. It also makes <code>Esc</code> easier, which is used a lot in Vim.
This single line is the biggest reason why I picked <code>keyd</code>.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">z = overload(z, z)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This might seem weird when you first look at it, but think about the key <code>z</code> as
its own layer (remember, layer is like the <code>Shift</code> key). So when <code>z</code> is hold, it
activates a <code>z</code> layer, like holding the <code>Shift</code> key activate the shift layer,
but it acts as <code>z</code> when tap alone. This gives me another modifier key (e.g.
<code>Ctrl</code>, <code>Alt</code>, <code>Shift</code>), without overriding what the default keyboard shortcuts
that come with software programs. But before we go into this special <code>z</code> layer,
we need to fix one thing first.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="shift-layer">Shift layer<a href="https://wiki.ethanppl.com/blog/2024/09/08/keyd#shift-layer" class="hash-link" aria-label="Direct link to Shift layer" title="Direct link to Shift layer">​</a></h3>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[shift:S]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">capslock = capslock</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We don't have a <code>CapsLock</code> key after we remap it. What this two lines do is
that, in the shift layer, map <code>CapsLock</code> to work as <code>CapsLock</code>. So to summarize,
right now holding <code>CapsLock</code> is <code>Ctrl</code>, tapping <code>CapsLock</code> once is <code>Esc</code>, and
doing <code>Shift+CapsLock</code> is <code>CapsLock</code>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-z-layer">The <code>z</code> layer<a href="https://wiki.ethanppl.com/blog/2024/09/08/keyd#the-z-layer" class="hash-link" aria-label="Direct link to the-z-layer" title="Direct link to the-z-layer">​</a></h3>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">i = macro(zi)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">o = macro(zo)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>First thing is since I did this custom <code>z</code> layer with AutoHotkey in Windows, I
realized the character <code>i</code> and <code>o</code> commonly follows the <code>z</code> key (e.g. amazing
and amazon). To avoid delay in typing or keys being ignored because I typed <code>i</code>
before releasing <code>z</code>. I mapped press and hold <code>z</code> then <code>i</code> (<code>z+i</code>) to output
<code>zi</code> and <code>z+o</code> to output <code>zo</code> here.</p>
<p>I use <code>+</code> sign to mean press and hold the first key and type the second key. But
<code>keyd</code> use <code>+</code> sign to mean chording, which means two keys to be pressed at the
same time. I didn't use chording in my config and most of the documentation for
keyboard shortcuts often use <code>+</code> sign like <code>Ctrl+c</code>, so I hope it's easy to
understand.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">e = macro(hi@ethanppl.com)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">g = macro(hi@ethanppl.com)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Next, I mapped <code>z+e</code> and <code>z+g</code> to two emails that I used the most for
communication and sign in. You will be amazed how many times you type your email
each day. And how much better you don't need to type <code>@</code> anymore.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">v = C-S-v</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">n = C-S-a</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">x = A-f4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">s = command(systemctl suspend)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Here I simplified some commonly used shortcuts with the <code>z</code> layer. In <code>keyd</code>,
capitalized <code>C</code>, <code>S</code> and <code>A</code> means <code>Ctrl</code>, <code>Shift</code> and <code>Alt</code> key respectively.
And the hyphen <code>-</code> means press and hold. For example, <code>z+v</code> is an alias of
<code>Ctrl+Shift+V</code> which is often used as paste text only or the markdown preview in
VSCode. <code>z+n</code> is an alias of <code>Ctrl+Shift+a</code> which shows information of all tabs
in Chrome. <code>z+x</code> is an alias of <code>Alt-F4</code> which closes a window. And <code>z+s</code> run
the <code>systemctl suspend</code> command, which will suspend the laptop. I find this
helpful, and somehow I trust it to suspend my laptop successfully more than just
closing the lid of my laptop.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">j = down</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">k = up</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">h = left</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">l = right</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Here I mapped <code>j</code>, <code>k</code>, <code>h</code>, <code>l</code> to be arrow keys. For example, holding <code>z+l</code>
will produce the right arrow key. The reason for these mappings (e.g. why <code>j</code> is
down) are based on Vim motions. These are helpful because arrows are usually
unreachable unless I move my palm away from my keyboard. Doing <code>z+l</code> allows me
to do things like autocomplete in terminal without moving my palm.</p>
<p>You might also notice that I try to pair keys that are comfortable to reach when
holding <code>z</code> down, like I would avoid mapping anything to <code>z+a</code> that is just
complicated and unnatural to type.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-zm-layer-a-layer-on-top-of-a-layer">The <code>z+m</code> layer, a layer on top of a layer<a href="https://wiki.ethanppl.com/blog/2024/09/08/keyd#the-zm-layer-a-layer-on-top-of-a-layer" class="hash-link" aria-label="Direct link to the-zm-layer-a-layer-on-top-of-a-layer" title="Direct link to the-zm-layer-a-layer-on-top-of-a-layer">​</a></h3>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">m = oneshot(media)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Still in the <code>z</code> layer, I defined the <code>m</code> key to activate the <code>media</code> layer. It
activates this layer as <code>oneshot</code>. The man page defined <code>oneshot</code> as "If tapped,
activate the supplied layer for the duration of the next key press". It means
the layer is activated once tapped, and it will be toggled off only after
another key is pressed. This means the <code>media</code> layer is activated once we tap
<code>z+m</code>, and we don't have to hold it for it to be active (unlike the <code>shift</code> or
<code>z</code> layer).</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[media]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">j = previoussong</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">k = playpause</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">l = nextsong</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I discovered these keys when browsing through the <code>keyd list-keys</code> command. And
Ubuntu support these keys. How this works is once I pressed <code>z+m</code>, then tap <code>l</code>,
it will emit a <code>nextsong</code> key press. What this allows me to do is whichever
active window I am in, I can use <code>z+m</code>, then <code>j</code>, <code>k</code>, or <code>l</code> to go back, pause,
or skip a song in Spotify, which I think is pretty amazing.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">a = macro({ enter 10ms "Aut 10ms hor 10ms iza 10ms tio 10ms n": space "Bea 10ms rer space C-v)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>One last line which doesn't relate to media actually, but I put it in any way.
It is used to help me type the authorization header in GraphQL playground. What
I have to do is copy the token that I want to use, then type <code>z+m</code> and <code>a</code>, it
will help me generate the whole</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "Authorization": "Bearer &lt;token_copied_here&gt;"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>It is taking advantage of the GraphQL playground I used that will help me close
the <code>{</code> curly braces. With some trial and error I realize I cannot make <code>keyd</code>
to type all keys at once, so I leave some delay in between and that works
better. Having it run <code>Ctrl+V</code> to paste also helps a lot. I find this saves me
quite some time each day.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="other-thoughts">Other thoughts<a href="https://wiki.ethanppl.com/blog/2024/09/08/keyd#other-thoughts" class="hash-link" aria-label="Direct link to Other thoughts" title="Direct link to Other thoughts">​</a></h2>
<p>There are many other features in <code>keyd</code> that is up to you to explore. I have
added different configs in and out over the year until I settle down to this set
of commands. For example, initially I also configured a shortcut to type
<code>console.log</code> and <code>IO.inspect</code> for TypeScript and Elixir, other than the
authorization header shortcut, but I found out I rarely used them and I removed
them.</p>
<p>I also tried <code>oneshot(shift)</code> which is recommended in the <code>keyd</code> README. But it
didn't work for me. I find out I often tap <code>Shift</code> but changed my mind
afterwards, which makes me accidentally typed characters in uppercase. I also
find out <code>oneshot(shift)</code> doesn't work well with Shift and drag to select in
bulk with mouse because it doesn't understand there is a mouse click and
deactivate the shift layer after I realize the <code>Shift</code> key.</p>
<p>Another thing I found is the <code>command()</code> call doesn't always work. I once
installed <code>copyq</code> to get clipboard history and I configured <code>z+c</code> to be
<code>command(copyq show)</code>, but it never worked. It's not a dealbreaker and I didn't
spend time to debug why.</p>
<p>One thing you might already notice is there is no more hotstrings, which I had
in <a href="https://github.com/ethanppl/ahk" target="_blank" rel="noopener noreferrer">my AutoHotkey configuration</a>. I can no
longer type <code>≠</code>, <code>→</code>, <code>←</code> and other special characters that easily. I realize
configuration like <code>l = ←</code> doesn't work. After reading the man page, I believe I
can make it works by setting up Unicode support, which have some other external
configuration required, and I have not spent the time investigating.</p>
<p>There is also no more mouse control. There is no way to move my mouse with
<code>keyd</code> because all <code>keyd</code> does is to remap keys. I know there are other daemons
in Linux that are designed for that, but I have not tried. I remember I found
one before, but it only works for X11.</p>
<p>There are also some minor problems that I wish to solve in the future. For
example, <code>Ctrl+&lt;arrows&gt;</code> is a common key combination that I do, but I can't
easily do that with <code>CapsLock+z+&lt;hjkl&gt;</code> because the relative position of
<code>CapsLock</code> and <code>z</code> is too close.</p>
<p>I would like to try mapping specific shortcuts to specific applications too. But
most of the time I find the default configs coming with the app works good
enough. Also, I did not configure any keys to launch an application because I
find <code>meta+&lt;num&gt;</code> good enough to open the windows that are pinned to the task
bar. For example, <code>win+2</code> always open my browser and <code>win+3</code> open VSCode.</p>
<p>That is how my configuration in <code>keyd</code> works and some of my reasoning behind it.
I hope you like this explanation, and it inspires you to remap your keyboard
too. It genuinely improved my life.</p>
<p><em>You might be interested in <a href="https://wiki.ethanppl.com/computers/keyboard">this page about keyboards</a> in
my Wiki too.</em></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="useful-links">Useful links<a href="https://wiki.ethanppl.com/blog/2024/09/08/keyd#useful-links" class="hash-link" aria-label="Direct link to Useful links" title="Direct link to Useful links">​</a></h2>
<ul>
<li><a href="https://github.com/rvaiya/keyd" target="_blank" rel="noopener noreferrer"><code>keyd</code> repository</a></li>
<li><a href="https://github.com/rvaiya/keyd/tree/master/examples" target="_blank" rel="noopener noreferrer"><code>keyd</code> examples</a> by the
creator</li>
<li>If you are stuck, you might find a solution by searching the
<a href="https://github.com/rvaiya/keyd/issues" target="_blank" rel="noopener noreferrer">issues in <code>keyd</code></a></li>
</ul>]]></content>
        <author>
            <name>Ethan Pang</name>
            <uri>https://github.com/ethanppl</uri>
        </author>
        <category label="Ubuntu" term="Ubuntu"/>
        <category label="Tips & Configs" term="Tips & Configs"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Don't say it's a weird bug, because it makes you look stupid]]></title>
        <id>https://wiki.ethanppl.com/blog/2024/06/19/weird-issue</id>
        <link href="https://wiki.ethanppl.com/blog/2024/06/19/weird-issue"/>
        <updated>2024-06-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Often when someone is debugging an issue, you might hear:]]></summary>
        <content type="html"><![CDATA[<p>Often when someone is debugging an issue, you might hear:</p>
<ul>
<li>It's a <em>weird bug</em></li>
<li><em>Somehow</em> it throws an error, it's <em>weird</em></li>
<li>I followed the README, but <em>weirdly</em> it doesn't work</li>
</ul>
<p>As if something outside their control misbehaved, they expect someone to help
them eliminate the "weirdness". I find that a bit annoying. What does "weird"
actually mean?</p>
<p>We think "it's weird" because we feel like we did nothing wrong, and the outcome
is not what we intended. We do not understand why something unexpected happened,
and our first instinct is to label it as "it's weird". If the system is "weird",
then it is no longer our problem.</p>
<p>However, is this true? Should you ever say computers behaved "weirdly"?</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="computers-never-lie">Computers never lie<a href="https://wiki.ethanppl.com/blog/2024/06/19/weird-issue#computers-never-lie" class="hash-link" aria-label="Direct link to Computers never lie" title="Direct link to Computers never lie">​</a></h2>
<p>One day, something like this happened. I was interrupted by my colleague because
he found a weird issue. He was debugging an API. While testing it, he missed the
authorization token in one of the service-to-service APIs, and as expected, an
unauthorized error was thrown. His immediate response was "weird", and then seek
help, and told me "it's weird". Huh? Why? What is weird though?</p>
<p>I understand what he felt like "weird" is he supplied a user token already, how
can it be unauthorized? The unauthorized error feels "weird" because the reason
is unknown. However, the reality is one of the APIs the program uses expects
another type of token, and the code missed that. There is nothing "weird", but
that immediate thought of the computer being "weird" makes it sound like he
thinks the computer lied to him, hence weird.</p>
<p>But computers don't lie! Computers are devices that take inputs, process and
then output. If the output is unexpected, either the inputs or the process, or
both are wrong. Data and code are both provided by users, programmers or other
systems. The computer only executes it. There is nothing weird about the
computer itself.</p>
<p>It's even worse when a developer says something is weird with the program that
they wrote. You wrote the program! The computer follows your instructions. How
would you blame something that exactly follows your instructions as weird, and
pretend to take no ownership of the error?</p>
<p>If you think seeing an unauthorized error is weird. It's not the computer
behaving weirdly, instead, it is you not understanding how your code works. It
is you not checking the API documentation before commenting it is weird. It is
not the computer lying to you therefore the code throw an error. Instead, it is
you who made a mistake in the code causing it to throw.</p>
<p>Computers don't lie. Even if they do because of hardware failure or cosmic rays
from light years away flipping a bit in the processor, it's abiding by the law
of physics. Figure out why and own the problem. That's how you learn.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="why-it-makes-you-look-stupid">Why it makes you look stupid<a href="https://wiki.ethanppl.com/blog/2024/06/19/weird-issue#why-it-makes-you-look-stupid" class="hash-link" aria-label="Direct link to Why it makes you look stupid" title="Direct link to Why it makes you look stupid">​</a></h2>
<p>When blaming something as weird, it sounds like blaming some external factors
causing the weirdness, as if you take no responsibility for the issue, and you
are not eager to understand the problem.</p>
<p>When you get used to saying "it's weird" to anything unexpected, your first
instinct is to make it sound like you have no control. It sounds like you do not
understand the issue only because some "weirdness" is hindering your ability to
understand. But to someone who understands, they know the reason is you lack the
knowledge to understand, not because it's weird. It just sounds like you do not
understand how things work, you are making up excuses, and you are not taking
ownership of figuring it out yourself. It doesn't matter how you think, it might
just be a filler word, but others who listen feel differently. It sounds like
you are stupid.</p>
<p>Even worse is if you are used to settling for the answer of "it's weird", you do
not try to understand what is wrong. You are tempted to seek help immediately.
Once you get used to that, you no longer self-learn and improve. You think you
don't understand just because things are "weird". You learn less.</p>
<p>Imagine if there are network issues, rather than labelling it as a "weird
internet problem", you take the time to investigate, you might figure out how
HTTP calls are structured, the difference between TCP and UDP, how DNS records
propagate, or how routing protocols work. That is how we learn.</p>
<p>So, whenever we are debugging, and when we encounter something unexpected, try
not to say "it's weird".</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="instead-state-the-facts">Instead, state the facts<a href="https://wiki.ethanppl.com/blog/2024/06/19/weird-issue#instead-state-the-facts" class="hash-link" aria-label="Direct link to Instead, state the facts" title="Direct link to Instead, state the facts">​</a></h2>
<p>The fact is we don't know. We find it unexpected because we don't know why, and
there is nothing wrong with stating that. Imagine someone coming to you to ask
you a question, which way is better:</p>
<blockquote>
<p>How do I find the log of this line in the console? Weirdly the log is not
showing up.</p>
</blockquote>
<p>Or,</p>
<blockquote>
<p>How do I find the log of this line in the console? I tried checking the
browser console, but I could not find it. I don't know where it is logged, can
you help?</p>
</blockquote>
<p>See the difference? The first one sounds like the person is blaming some
weirdness that swallowed the console.log. But in fact, it is some piece of code
changing the control flow causing that line not to log. Or it's just looking at
the wrong place to find the log, it could be in the server-side console.</p>
<p>Taking the unauthorized error example, instead of a filler word "weird", he
could comment "I already put in my token, I expect the API calls to be
authorized", and then proceed to find the source of the error.</p>
<p>It's mysterious and weird only because you don't understand how the program you
wrote works. State that you don't know what caused the unexpected behaviour is
better than labelling it as "weird".</p>
<p>Sooner or later you will figure out the issue. It might be some global variables
and side effects in functions. It might be some outdated cache. It might be race
conditions. Or it might be some network failure. No matter what it is, you will
realize there is nothing "weird", just a lack of understanding. So, admit that
it's just you don't know, and you will try to understand it.</p>
<p>To get even better, state what you have tried when seeking help. Divide and
conquer. Check intermediate outputs. Narrow down the scope and state your
findings when asking questions. "I tried checking the browser console". "This
line is logged in the console but not this". This shows that you are eager to
figure it out and learn. You put in the effort to understand the issue and try
to demystify it yourself. Talk to a
<a href="https://en.wikipedia.org/wiki/Rubber_duck_debugging" target="_blank" rel="noopener noreferrer">rubber duck</a> and you might
eventually figure it out all yourself :)</p>
<p>So, avoiding saying "it's weird". State what you found, what you expect to see
and what is unexpected. It will make you sound more credible. A person who takes
ownership.</p>]]></content>
        <author>
            <name>Ethan Pang</name>
            <uri>https://github.com/ethanppl</uri>
        </author>
        <category label="Thoughts" term="Thoughts"/>
        <category label="Workplace" term="Workplace"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Dual Boot Windows and Ubuntu with Secure Boot and Full Disk Encryption]]></title>
        <id>https://wiki.ethanppl.com/blog/2024/02/29/dual-boot-guide</id>
        <link href="https://wiki.ethanppl.com/blog/2024/02/29/dual-boot-guide"/>
        <updated>2024-02-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A few months ago, I finally took the time to set up dual boot on my laptop. I]]></summary>
        <content type="html"><![CDATA[<p>A few months ago, I finally took the time to set up dual boot on my laptop. I
would love to try Ubuntu as my daily driver again, while keeping the Windows OS
just in case. I treated this as a learning opportunity and configured dual boot
with secure boot still enabled and have full disk encryption configured for both
operating systems.</p>
<p>I wrote this blog because I could not find a single guide explains all steps for
secure boot and full disk encryption sequentially, and these steps interleave
each other. So, I made some notes before the installation to ensure I am doing
the right thing at the right time. For example, I won't accidentally skip a step
about configuring secure boot when I am focused on following another guide about
full disk encryption. This guide is a cleaned up version of the notes that I
compiled for my dual boot set up.</p>
<p>I organized the whole flow into 6 general steps:</p>
<ol>
<li>Preparing in Windows: set boot mode, partition disk, etc.</li>
<li>Configure BIOS: boot mode and other BIOS settings</li>
<li>Configure Ubuntu Partition: boot and data partition</li>
<li>Install Ubuntu: configure dual boot and mounting volumes correctly</li>
<li>Set up <code>crypttab</code> for full disk encryption</li>
<li>Reboot and fix some other issues</li>
</ol>
<p>You can do step 1 and 2 separately. From step 3 onwards, I suggest doing in 1
sitting, which might take an hour or more.</p>
<p>What I have is a Lenovo ThinkPad X1 Carbon 7th Gen laptop, running Windows 11
home and I would like it to dual boot into Ubuntu 22.04. And, as mentioned, with
secure boot enabled in the boot process and full disk encryption for both
operating systems.</p>
<p>Now the system has been running for a few months and things work fine. No issue
with booting or decrypting the disk. It's a good time to document the steps and
share the resources that I found helpful. Hopefully this is helpful to others
and maybe one day my future self.</p>
<p><strong>Dual boot is stressful and it has risk. This guide by no means is complete.</strong>
I have dual boot a few times before, so I kind of know how things look like. To
me, it's helpful to watch YouTube video of people dual booting before doing it
to understand what to expect. Also, check a few more guides, compare and
understand which part is common and which part is custom.</p>
<p><strong>Make sure you have access to guides and notes on mobile or another device.</strong>
You won't be able to access notes in the device during dual boot. Things might
break after dual booting. Maybe the Wi-Fi card driver is not working, or
graphics card config is wrong, or the pointer device is unusable. You will need
another device to access your notes or search the Internet for answers.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="preparation-in-windows">Preparation in Windows<a href="https://wiki.ethanppl.com/blog/2024/02/29/dual-boot-guide#preparation-in-windows" class="hash-link" aria-label="Direct link to Preparation in Windows" title="Direct link to Preparation in Windows">​</a></h2>
<p>Let's start!</p>
<p>The first step is to prepare for dual boot. All the steps in this stage are done
within the Windows. There is no specific order for these steps and no need to do
it in 1 sitting. I had my laptop running on Windows, so all the preparation are
done in Windows.</p>
<ul>
<li>UEFI, not BIOS<!-- -->
<ul>
<li>On Windows: <code>System Information</code> → <code>BIOS Mode</code> = <code>UEFI</code> instead of <code>Legacy</code></li>
<li><code>UEFI</code> is required for secure boot, GUID partition table (GPT) t's faster,
and many other features</li>
<li>Read more here: <a href="https://itsfoss.com/check-uefi-or-bios/" target="_blank" rel="noopener noreferrer">https://itsfoss.com/check-uefi-or-bios/</a></li>
</ul>
</li>
<li>GPT, not MBR<!-- -->
<ul>
<li>On Windows: <code>Disk management</code> → <code>Create and format hard disk partitions</code> →
right-click disk → <code>Properties</code> → <code>Volume</code> → <code>Partition style</code> =
<code>GUID Partition Table (GPT)</code></li>
<li>Read more here: <a href="https://itsfoss.com/check-mbr-or-gpt/" target="_blank" rel="noopener noreferrer">https://itsfoss.com/check-mbr-or-gpt/</a></li>
</ul>
</li>
<li>Use <a href="https://rufus.ie/en/" target="_blank" rel="noopener noreferrer">Rufus</a> to create the bootable USB<!-- -->
<ul>
<li>Get the <a href="https://ubuntu.com/download/desktop" target="_blank" rel="noopener noreferrer">Ubuntu Desktop Image</a></li>
<li>Partition scheme: Select <code>GPT</code></li>
<li>Target System: Select <code>UEFI</code></li>
</ul>
</li>
<li>Backup BitLocker recovery key<!-- -->
<ul>
<li>Make sure your BitLocker recovery key is saved to your Microsoft account, or
any other ways of backing it up</li>
<li>Read more on how to back up in
<a href="https://support.microsoft.com/en-us/windows/back-up-your-bitlocker-recovery-key-e63607b4-77fb-4ad3-8022-d6dc428fbd0d" target="_blank" rel="noopener noreferrer">Microsoft official guide</a></li>
</ul>
</li>
<li>Partition your disk<!-- -->
<ul>
<li>Assuming Windows now taking up the full disk, you will need to shrink the
volume available to Windows and create space for Linux</li>
<li>Disable BitLocker<!-- -->
<ul>
<li>I had to disable BitLocker to shrink the Windows volume</li>
<li>Follow the on-screen instructions for each to decrypt and reboot, it will
take some time</li>
<li>Read more on
<a href="https://www.diskpart.com/articles/resize-bitlocker-partition-windows-10-0725.html" target="_blank" rel="noopener noreferrer">this guide about resize BitLocker partition</a></li>
</ul>
</li>
<li>Partition<!-- -->
<ul>
<li>I used <a href="https://www.diskpart.com/download.html" target="_blank" rel="noopener noreferrer">AOMEI Partition Assistant</a></li>
<li>Read their
<a href="https://www.diskpart.com/safely-partition.html" target="_blank" rel="noopener noreferrer">How to safely partition</a>
tutorial</li>
<li>Other guides I found useful:
<a href="https://www.diskpart.com/help/align-partition.html" target="_blank" rel="noopener noreferrer">Align partition</a>,
<a href="https://www.diskpart.com/lib/PreOS-mode.html" target="_blank" rel="noopener noreferrer">PreOS Mode</a></li>
<li>If you want to use the Disk Management tool from Windows but failed,
<a href="https://answers.microsoft.com/en-us/windows/forum/all/windows-disk-management-unable-to-shrink-c-drive/217c3521-b254-4662-bac9-bc90dc633fab" target="_blank" rel="noopener noreferrer">this post</a>
might be helpful</li>
</ul>
</li>
<li>Move <code>WinRe</code> partition after the Windows partition<!-- -->
<ul>
<li>This is the recovery partition for Windows to support failover</li>
<li>It is recommended to keep this as a separate partition and put it right
after the Windows partition</li>
<li>Read more on
<a href="https://learn.microsoft.com/en-us/answers/questions/1354739/the-recovery-partition-is-typically-created-at-the" target="_blank" rel="noopener noreferrer">this post</a></li>
<li>So what I had is [Windows | WinRe | Unused space (for Ubuntu later)]</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="configure-bios-in-the-bios-menu">Configure BIOS in the BIOS Menu<a href="https://wiki.ethanppl.com/blog/2024/02/29/dual-boot-guide#configure-bios-in-the-bios-menu" class="hash-link" aria-label="Direct link to Configure BIOS in the BIOS Menu" title="Direct link to Configure BIOS in the BIOS Menu">​</a></h2>
<p>Just to make sure a few things are set in the BIOS menu. Knowing how to get into
the BIOS menu is also helpful in case of bad things happened.</p>
<p>Reboot the computer and enter the BIOS menu before the OS load. Search online
how to do it for your computer. It's usually F2 or F12. For me is pressing Enter
when it says something like "Press Enter to interrupt".</p>
<p>Things to check:</p>
<ul>
<li>Make sure the UEFI BIOS is up-to-date</li>
<li>SATA mode is <code>AHCI</code>, as Ubuntu doesn't support other operations</li>
<li>Secure boot is enabled and CSM is disabled<!-- -->
<ul>
<li>It is required to install Ubuntu with secure boot enabled for secure boot to
work with Ubuntu</li>
<li>CSM is to support non-UEFI OS. It should already be disabled with secure
boot enabled</li>
</ul>
</li>
<li>Boot mode is UEFI only</li>
<li>TPM security has to be enabled for BitLocker in Windows</li>
<li>You can check the Boot order in the BIOS menu as well</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="configure-ubuntu-partition">Configure Ubuntu Partition<a href="https://wiki.ethanppl.com/blog/2024/02/29/dual-boot-guide#configure-ubuntu-partition" class="hash-link" aria-label="Direct link to Configure Ubuntu Partition" title="Direct link to Configure Ubuntu Partition">​</a></h2>
<p>The important bits start here! From now on, it's better to do all remaining
steps in one go.</p>
<p>This stage is to boot into Ubuntu with the live USB and configure the Ubuntu
partition that is encrypted.</p>
<ol>
<li>
<p>Boot the USB stick and select <code>Try without installing</code> when prompted</p>
</li>
<li>
<p>You should see the default Ubuntu desktop, open a terminal</p>
</li>
<li>
<p>In the terminal, change to root with</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo su</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p>Check the partition table again</p>
<ol>
<li>Check with <code>sgdisk</code>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sgdisk --print /dev/nvme0n1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>If your disk is not <code>/dev/nvme0n1</code>, then you will have to replace all the
following commands to your disk name, e.g. <code>/dev/sda</code></li>
<li>Look for the disk name (e.g. <code>/dev/sda</code> or <code>/dev/nvme0n1</code>) not the
partition name (e.g. <code>/dev/sda1</code> or <code>/dev/nvme0n1p1</code>)</li>
</ol>
</li>
<li>
<p>Create 2 partitions in the empty space in your disk, one for boot and the
rest for root</p>
<ol>
<li>New 1800M partition for boot<!-- -->
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sgdisk --new=5:0:+1800M /dev/nvme0n1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>New partition using the rest for root<!-- -->
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sgdisk --new=6:0:0 /dev/nvme0n1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>Name the partitions<!-- -->
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sgdisk --change-name=5:/boot --change-name=6:rootfs /dev/nvme0n1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>Choose 8300 as the type code for the file system (Linux filesystem)<!-- -->
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sgdisk --typecode=5:8300 --typecode=6:8300 /dev/nvme0n1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<!-- -->(you can find all typecode with <code>sgdisk -L</code>)</li>
<li>Make EXT4 file system (notice that here is the partition name)<!-- -->
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mkfs.ext4 -L boot /dev/nvme0n1p5</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ol>
</li>
<li>
<p>Encrypt the Linux data partition with LUKS</p>
<ul>
<li>In the following codeblock, I am showing the output as well</li>
<li>Lines after <code>#</code> are what needed to be inputted to the terminal</li>
<li>The passphrase you chose at this step is what you needed to decrypt the
disk when booting</li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># cryptsetup luksFormat --type=luks2 /dev/nvme0n1p6</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WARNING!</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">========</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">This will overwrite data on /dev/nvme0n1p6 irrevocably.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Are you sure? (Type uppercase yes): YES</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Enter passphrase for /dev/nvme0n1p6:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Verify passphrase:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># cryptsetup open /dev/nvme0n1p6 nvme0n1p6_crypt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Enter passphrase for /dev/nvme0n1p6:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># ls /dev/mapper/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">control nvme0n1p6_crypt</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p>Set up logical volume manager (LVM), with root, swap and home partition</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># pvcreate /dev/mapper/nvme0n1p6_crypt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Physical volume "/dev/mapper/nvme0n1p6_crypt" successfully created.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># vgcreate ubuntu-vg /dev/mapper/nvme0n1p6_crypt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Volume group "ubuntu-vg" successfully created</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># lvcreate -L 64G -n root ubuntu-vg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Logical volume "root" created.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># lvcreate -L 16G -n swap ubuntu-vg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Logical volume "swap" created.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># lvcreate -l 100%FREE -n home ubuntu-vg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Logical volume "home" created.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ol>
<p>Now all the Ubuntu partitions are prepared. Without exiting the live
environment, use the GUI to continue the installation.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="install-ubuntu">Install Ubuntu<a href="https://wiki.ethanppl.com/blog/2024/02/29/dual-boot-guide#install-ubuntu" class="hash-link" aria-label="Direct link to Install Ubuntu" title="Direct link to Install Ubuntu">​</a></h2>
<p>We will install Ubuntu on the encrypted disk and configure things to make sure
secure boot also works.</p>
<ol>
<li>Run the graphical installer</li>
<li>Connect to your Wi-Fi network</li>
<li>On the software step, for "Other options" (This step is important for secure
boot to work)<!-- -->
<ol>
<li>Check the "Download updates" option</li>
<li>Check the "Install third-party software for graphics and Wi-Fi hardware"</li>
<li>Check the "Configure Secure Boot" option and enter a password, remember
this password. Useful for the MOK management step explained below.</li>
<li>Save and continue</li>
</ol>
</li>
<li>When asked what to do with the disk, pick "Something else", or the option
that allows you to manually assign disk partition<!-- -->
<ol>
<li>Use the ~1800MB partition as <code>ext4</code> with mount point as <code>/boot</code></li>
<li>Use the <code>/dev/mapper/ubuntu-vg-root</code> as <code>ext4</code> FS and mount it to <code>/</code></li>
<li>Use the <code>/dev/mapper/ubuntu-vg-home</code> as <code>ext4</code> FS and mount it to <code>/home</code></li>
<li>Use the <code>/dev/mapper/ubuntu-vg-swap</code> as <code>swap</code></li>
<li>Do the same as above if you have more or less partitions</li>
<li>The bootloader device should be <code>/dev/nvme0n1</code></li>
</ol>
</li>
<li>Proceed with the installation</li>
<li>When finished, select <code>Continue Testing</code>, and it should bring you back to the
Ubuntu Desktop environment</li>
</ol>
<p>Do not leave the live environment just yet.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="set-up-crypttab">Set up <code>crypttab</code><a href="https://wiki.ethanppl.com/blog/2024/02/29/dual-boot-guide#set-up-crypttab" class="hash-link" aria-label="Direct link to set-up-crypttab" title="Direct link to set-up-crypttab">​</a></h2>
<p><code>crypttab</code> is used to decrypt the disk on boot.</p>
<ol>
<li>
<p>Open the terminal and find the UUID of the partition with LUKS</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo blkid /dev/nvme0n1p6</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Example output:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">/dev/nvme0n1p6: UUID="abcdefgh-1234-5678-9012-abcdefghijklm" TYPE="crypto_LUKS"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I suggest writing the UUID down somewhere</p>
</li>
<li>
<p>Mount the drives and chroot into the mount:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mount /dev/mapper/ubuntu-vg-root /target</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mount /dev/nvme0n1p5 /target/boot</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">for n in proc sys dev etc/resolv.conf; do mount --rbind /$n /target/$n; done</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">chroot /target</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mount -a</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p>Configure <code>/etc/crypttab</code>:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># &lt;target name&gt; &lt;source device&gt; &lt;key file&gt; &lt;options&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># options used:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#     luks    - specifies that this is a LUKS encrypted device</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#     tries=0 - allows to re-enter password unlimited number of times</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#     discard - allows SSD TRIM command, WARNING: potential security risk (more: "man crypttab")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#     loud    - display all warnings</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nvme0n1p6_crypt UUID=abcdefgh-1234-5678-9012-abcdefghijklm none luks,discard</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p>Apply the changes (still inside chroot)</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">update-initramfs -k all -c</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="reboot-and-some-remaining-issues">Reboot and some remaining issues<a href="https://wiki.ethanppl.com/blog/2024/02/29/dual-boot-guide#reboot-and-some-remaining-issues" class="hash-link" aria-label="Direct link to Reboot and some remaining issues" title="Direct link to Reboot and some remaining issues">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="blue-screen-mok-management">Blue screen MOK management<a href="https://wiki.ethanppl.com/blog/2024/02/29/dual-boot-guide#blue-screen-mok-management" class="hash-link" aria-label="Direct link to Blue screen MOK management" title="Direct link to Blue screen MOK management">​</a></h3>
<ol>
<li>When reboot, because of the secure boot, you will see a blue screen and ask
to perform MOK management</li>
<li>Choose Enroll MOK, continue, yes</li>
<li>Input the password that you inputted on the step for software install during
the installation for third party drivers<!-- -->
<ul>
<li>It won't show what you typed, trust that it's there</li>
<li>This is only a one time thing so no worries</li>
<li>Once successful you don't need the password anymore</li>
</ul>
</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="windows-bitlocker-issue">Windows BitLocker Issue<a href="https://wiki.ethanppl.com/blog/2024/02/29/dual-boot-guide#windows-bitlocker-issue" class="hash-link" aria-label="Direct link to Windows BitLocker Issue" title="Direct link to Windows BitLocker Issue">​</a></h3>
<p>You might need to input the BitLocker recovery key when booting into Windows.
Find your recovery key in where ever you saved (e.g. Microsoft account) and
input it. This is also one time thing, so no worries.</p>
<p>If you have disabled BitLocker before to partition the disk, you will need to
re-enable it and encrypt the Windows partition again.</p>
<p>To encrypt again, you need to make sure you meet the pre-requisites to enable
BitLocker:</p>
<ul>
<li>Check that the partition table is GPT</li>
<li>BIOS is set to UEFI</li>
<li>Secure boot is enabled</li>
</ul>
<p>Go to <code>System information</code> → scroll down and see device encryption support needs
to be <code>meets prerequisites</code>. If not, check the above again and maybe reboot and
see.</p>
<p>Once the prerequisites are met, go to Settings → privacy &amp; security → device
encryption and enable BitLocker.</p>
<p>To check the progress:</p>
<ul>
<li>Open admin command prompt and input <code>manage-bde -status C:</code></li>
<li>If the status stuck, not updating, try <code>manage-bde -pause C:</code> and then
<code>manage-bde -resume C:</code></li>
</ul>
<p>With BitLocker re-enabled, this means both Ubuntu and Windows have full disk
encryption and secure boot enabled!</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="wrong-timezone-after-dual-boot">Wrong timezone after dual boot<a href="https://wiki.ethanppl.com/blog/2024/02/29/dual-boot-guide#wrong-timezone-after-dual-boot" class="hash-link" aria-label="Direct link to Wrong timezone after dual boot" title="Direct link to Wrong timezone after dual boot">​</a></h3>
<p>You might notice one of the OS show the wrong time before resyncing their time.
This is because they store time into the computer hardware clock differently.
Linux assumes that the time on the hardware clock is stored in UTC and Windows
assumes it is local time. One solution is to ask Linux to store the hardware
clock as local time:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">timedatectl set-local-rtc 1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><a href="https://itsfoss.com/wrong-time-dual-boot/" target="_blank" rel="noopener noreferrer">Read more in this guide from It's Foss</a></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="references">References<a href="https://wiki.ethanppl.com/blog/2024/02/29/dual-boot-guide#references" class="hash-link" aria-label="Direct link to References" title="Direct link to References">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="about-full-disk-encryption">About full disk encryption:<a href="https://wiki.ethanppl.com/blog/2024/02/29/dual-boot-guide#about-full-disk-encryption" class="hash-link" aria-label="Direct link to About full disk encryption:" title="Direct link to About full disk encryption:">​</a></h3>
<ul>
<li><a href="https://www.mikekasberg.com/blog/2020/04/08/dual-boot-ubuntu-and-windows-with-encryption.html" target="_blank" rel="noopener noreferrer">How to Dual-Boot Ubuntu 20.04 (or 22.04) and Windows 10 (or 11) with Encryption | Mike Kasberg</a> -
recommend reading</li>
<li><a href="https://gist.github.com/luispabon/db2c9e5f6cc73bb37812a19a40e137bc" target="_blank" rel="noopener noreferrer">Dual boot with encryption nodes | GitHub Gist from @luispabon</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="about-secure-boot">About secure boot:<a href="https://wiki.ethanppl.com/blog/2024/02/29/dual-boot-guide#about-secure-boot" class="hash-link" aria-label="Direct link to About secure boot:" title="Direct link to About secure boot:">​</a></h3>
<ul>
<li><a href="https://www.reddit.com/r/linux4noobs/comments/osotp3/ubuntu_dual_boot_with_windows_10_can_i_enable/" target="_blank" rel="noopener noreferrer">Can I enable secure boot again? | Reddit</a> -
Ans: no</li>
<li><a href="https://youtu.be/GqJBniwj1Mg" target="_blank" rel="noopener noreferrer">A Clean Install of Linux Ubuntu 20.04 (Lenovo UEFI BIOS with Secure Boot and MOK) | YouTube</a> -
worth watching parts about the secure boot and MOK step</li>
<li><a href="https://askubuntu.com/questions/880240/it-is-possible-to-dual-boot-linux-and-windows-10-with-secure-boot-enabled" target="_blank" rel="noopener noreferrer">It is possible to dual boot Linux and Windows 10 with secure boot enabled? | Ask Ubuntu</a> -
Ans: yes</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="about-partition-and-bitlocker">About partition and BitLocker:<a href="https://wiki.ethanppl.com/blog/2024/02/29/dual-boot-guide#about-partition-and-bitlocker" class="hash-link" aria-label="Direct link to About partition and BitLocker:" title="Direct link to About partition and BitLocker:">​</a></h3>
<ul>
<li><a href="https://answers.microsoft.com/en-us/windows/forum/all/windows-disk-management-unable-to-shrink-c-drive/217c3521-b254-4662-bac9-bc90dc633fab" target="_blank" rel="noopener noreferrer">Windows Disk Management unable to shrink C: drive volume</a></li>
<li><a href="https://www.diskpart.com/articles/resize-bitlocker-partition-windows-10-0725.html" target="_blank" rel="noopener noreferrer">How can I resize BitLocker partition in Windows 10/11</a></li>
<li><a href="https://itsfoss.com/dual-boot-ubuntu-windows-bitlocker/" target="_blank" rel="noopener noreferrer">Dual Booting Ubuntu with Windows 10 Pro with BitLocker Encryption</a></li>
</ul>
<p>That's it and I hope you can set up dual boot without issues!</p>]]></content>
        <author>
            <name>Ethan Pang</name>
            <uri>https://github.com/ethanppl</uri>
        </author>
        <category label="Dual Boot" term="Dual Boot"/>
        <category label="Ubuntu" term="Ubuntu"/>
        <category label="Windows" term="Windows"/>
    </entry>
</feed>