"use strict";(self.webpackChunkmy_wiki=self.webpackChunkmy_wiki||[]).push([[8516],{9064:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"/2024/06/19/weird-issue","metadata":{"permalink":"/wiki/blog/2024/06/19/weird-issue","source":"@site/blog/2024-06-19-weird-issue.md","title":"Don\'t say it\'s a weird bug, because it makes you look stupid","description":"Often when someone is debugging an issue, you might hear:","date":"2024-06-19T00:00:00.000Z","tags":[{"inline":true,"label":"Thoughts","permalink":"/wiki/blog/tags/thoughts"},{"inline":true,"label":"Workplace","permalink":"/wiki/blog/tags/workplace"}],"readingTime":5.855,"hasTruncateMarker":true,"authors":[{"name":"Ethan Pang","url":"https://github.com/ethanppl","imageURL":"https://github.com/ethanppl.png","key":"ethan"}],"frontMatter":{"title":"Don\'t say it\'s a weird bug, because it makes you look stupid","tags":[{"label":"Thoughts","permalink":"thoughts"},{"label":"Workplace","permalink":"workplace"}],"toc_min_heading_level":2,"toc_max_heading_level":3,"authors":"ethan"},"unlisted":false,"nextItem":{"title":"Dual Boot Windows and Ubuntu with Secure Boot and Full Disk Encryption","permalink":"/wiki/blog/2024/02/29/dual-boot-guide"}},"content":"Often when someone is debugging an issue, you might hear:\\n\\n- It\'s a _weird bug_\\n- _Somehow_ it throws an error, it\'s _weird_\\n- I followed the README, but _weirdly_ it doesn\'t work\\n\\nAs if something outside their control misbehaved, they expect someone to help\\nthem eliminate the \\"weirdness\\". I find that a bit annoying. What does \\"weird\\"\\nactually mean?\\n\\nWe think \\"it\'s weird\\" because we feel like we did nothing wrong, and the outcome\\nis not what we intended. We do not understand why something unexpected happened,\\nand our first instinct is to label it as \\"it\'s weird\\". If the system is \\"weird\\",\\nthen it is no longer our problem.\\n\\nHowever, is this true? Should you ever say computers behaved \\"weirdly\\"?\\n\\n\x3c!-- truncate --\x3e\\n\\n## Computers never lie\\n\\nOne day, something like this happened. I was interrupted by my colleague because\\nhe found a weird issue. He was debugging an API. While testing it, he missed the\\nauthorization token in one of the service-to-service APIs, and as expected, an\\nunauthorized error was thrown. His immediate response was \\"weird\\", and then seek\\nhelp, and told me \\"it\'s weird\\". Huh? Why? What is weird though?\\n\\nI understand what he felt like \\"weird\\" is he supplied a user token already, how\\ncan it be unauthorized? The unauthorized error feels \\"weird\\" because the reason\\nis unknown. However, the reality is one of the APIs the program uses expects\\nanother type of token, and the code missed that. There is nothing \\"weird\\", but\\nthat immediate thought of the computer being \\"weird\\" makes it sound like he\\nthinks the computer lied to him, hence weird.\\n\\nBut computers don\'t lie! Computers are devices that take inputs, process and\\nthen output. If the output is unexpected, either the inputs or the process, or\\nboth are wrong. Data and code are both provided by users, programmers or other\\nsystems. The computer only executes it. There is nothing weird about the\\ncomputer itself.\\n\\nIt\'s even worse when a developer says something is weird with the program that\\nthey wrote. You wrote the program! The computer follows your instructions. How\\nwould you blame something that exactly follows your instructions as weird, and\\npretend to take no ownership of the error?\\n\\nIf you think seeing an unauthorized error is weird. It\'s not the computer\\nbehaving weirdly, instead, it is you not understanding how your code works. It\\nis you not checking the API documentation before commenting it is weird. It is\\nnot the computer lying to you therefore the code throw an error. Instead, it is\\nyou who made a mistake in the code causing it to throw.\\n\\nComputers don\'t lie. Even if they do because of hardware failure or cosmic rays\\nfrom light years away flipping a bit in the processor, it\'s abiding by the law\\nof physics. Figure out why and own the problem. That\'s how you learn.\\n\\n## Why it makes you look stupid\\n\\nWhen blaming something as weird, it sounds like blaming some external factors\\ncausing the weirdness, as if you take no responsibility for the issue, and you\\nare not eager to understand the problem.\\n\\nWhen you get used to saying \\"it\'s weird\\" to anything unexpected, your first\\ninstinct is to make it sound like you have no control. It sounds like you do not\\nunderstand the issue only because some \\"weirdness\\" is hindering your ability to\\nunderstand. But to someone who understands, they know the reason is you lack the\\nknowledge to understand, not because it\'s weird. It just sounds like you do not\\nunderstand how things work, you are making up excuses, and you are not taking\\nownership of figuring it out yourself. It doesn\'t matter how you think, it might\\njust be a filler word, but others who listen feel differently. It sounds like\\nyou are stupid.\\n\\nEven worse is if you are used to settling for the answer of \\"it\'s weird\\", you do\\nnot try to understand what is wrong. You are tempted to seek help immediately.\\nOnce you get used to that, you no longer self-learn and improve. You think you\\ndon\'t understand just because things are \\"weird\\". You learn less.\\n\\nImagine if there are network issues, rather than labelling it as a \\"weird\\ninternet problem\\", you take the time to investigate, you might figure out how\\nHTTP calls are structured, the difference between TCP and UDP, how DNS records\\npropagate, or how routing protocols work. That is how we learn.\\n\\nSo, whenever we are debugging, and when we encounter something unexpected, try\\nnot to say \\"it\'s weird\\".\\n\\n## Instead, state the facts\\n\\nThe fact is we don\'t know. We find it unexpected because we don\'t know why, and\\nthere is nothing wrong with stating that. Imagine someone coming to you to ask\\nyou a question, which way is better:\\n\\n> How do I find the log of this line in the console? Weirdly the log is not\\n> showing up.\\n\\nOr,\\n\\n> How do I find the log of this line in the console? I tried checking the\\n> browser console, but I could not find it. I don\'t know where it is logged, can\\n> you help?\\n\\nSee the difference? The first one sounds like the person is blaming some\\nweirdness that swallowed the console.log. But in fact, it is some piece of code\\nchanging the control flow causing that line not to log. Or it\'s just looking at\\nthe wrong place to find the log, it could be in the server-side console.\\n\\nTaking the unauthorized error example, instead of a filler word \\"weird\\", he\\ncould comment \\"I already put in my token, I expect the API calls to be\\nauthorized\\", and then proceed to find the source of the error.\\n\\nIt\'s mysterious and weird only because you don\'t understand how the program you\\nwrote works. State that you don\'t know what caused the unexpected behaviour is\\nbetter than labelling it as \\"weird\\".\\n\\nSooner or later you will figure out the issue. It might be some global variables\\nand side effects in functions. It might be some outdated cache. It might be race\\nconditions. Or it might be some network failure. No matter what it is, you will\\nrealize there is nothing \\"weird\\", just a lack of understanding. So, admit that\\nit\'s just you don\'t know, and you will try to understand it.\\n\\nTo get even better, state what you have tried when seeking help. Divide and\\nconquer. Check intermediate outputs. Narrow down the scope and state your\\nfindings when asking questions. \\"I tried checking the browser console\\". \\"This\\nline is logged in the console but not this\\". This shows that you are eager to\\nfigure it out and learn. You put in the effort to understand the issue and try\\nto demystify it yourself. Talk to a\\n[rubber duck](https://en.wikipedia.org/wiki/Rubber_duck_debugging) and you might\\neventually figure it out all yourself :)\\n\\nSo, avoiding saying \\"it\'s weird\\". State what you found, what you expect to see\\nand what is unexpected. It will make you sound more credible. A person who takes\\nownership."},{"id":"/2024/02/29/dual-boot-guide","metadata":{"permalink":"/wiki/blog/2024/02/29/dual-boot-guide","source":"@site/blog/2024-02-29-dual-boot-guide.md","title":"Dual Boot Windows and Ubuntu with Secure Boot and Full Disk Encryption","description":"A few months ago, I finally took the time to set up dual boot on my laptop. I","date":"2024-02-29T00:00:00.000Z","tags":[{"inline":true,"label":"Dual Boot","permalink":"/wiki/blog/tags/dual-boot"},{"inline":true,"label":"Ubuntu","permalink":"/wiki/blog/tags/ubuntu"},{"inline":true,"label":"Windows","permalink":"/wiki/blog/tags/windows"}],"readingTime":11.49,"hasTruncateMarker":true,"authors":[{"name":"Ethan Pang","url":"https://github.com/ethanppl","imageURL":"https://github.com/ethanppl.png","key":"ethan"}],"frontMatter":{"title":"Dual Boot Windows and Ubuntu with Secure Boot and Full Disk Encryption","tags":[{"label":"Dual Boot","permalink":"dual-boot"},{"label":"Ubuntu","permalink":"ubuntu"},{"label":"Windows","permalink":"windows"}],"toc_min_heading_level":2,"toc_max_heading_level":3,"authors":"ethan"},"unlisted":false,"prevItem":{"title":"Don\'t say it\'s a weird bug, because it makes you look stupid","permalink":"/wiki/blog/2024/06/19/weird-issue"}},"content":"A few months ago, I finally took the time to set up dual boot on my laptop. I\\nwould love to try Ubuntu as my daily driver again, while keeping the Windows OS\\njust in case. I treated this as a learning opportunity and configured dual boot\\nwith secure boot still enabled and have full disk encryption configured for both\\noperating systems.\\n\\nI wrote this blog because I could not find a single guide explains all steps for\\nsecure boot and full disk encryption sequentially, and these steps interleave\\neach other. So, I made some notes before the installation to ensure I am doing\\nthe right thing at the right time. For example, I won\'t accidentally skip a step\\nabout configuring secure boot when I am focused on following another guide about\\nfull disk encryption. This guide is a cleaned up version of the notes that I\\ncompiled for my dual boot set up.\\n\\nI organized the whole flow into 6 general steps:\\n\\n1. Preparing in Windows: set boot mode, partition disk, etc.\\n2. Configure BIOS: boot mode and other BIOS settings\\n3. Configure Ubuntu Partition: boot and data partition\\n4. Install Ubuntu: configure dual boot and mounting volumes correctly\\n5. Set up `crypttab` for full disk encryption\\n6. Reboot and fix some other issues\\n\\n\x3c!-- truncate --\x3e\\n\\nYou can do step 1 and 2 separately. From step 3 onwards, I suggest doing in 1\\nsitting, which might take an hour or more.\\n\\nWhat I have is a Lenovo ThinkPad X1 Carbon 7th Gen laptop, running Windows 11\\nhome and I would like it to dual boot into Ubuntu 22.04. And, as mentioned, with\\nsecure boot enabled in the boot process and full disk encryption for both\\noperating systems.\\n\\nNow the system has been running for a few months and things work fine. No issue\\nwith booting or decrypting the disk. It\'s a good time to document the steps and\\nshare the resources that I found helpful. Hopefully this is helpful to others\\nand maybe one day my future self.\\n\\n**Dual boot is stressful and it has risk. This guide by no means is complete.**\\nI have dual boot a few times before, so I kind of know how things look like. To\\nme, it\'s helpful to watch YouTube video of people dual booting before doing it\\nto understand what to expect. Also, check a few more guides, compare and\\nunderstand which part is common and which part is custom.\\n\\n**Make sure you have access to guides and notes on mobile or another device.**\\nYou won\'t be able to access notes in the device during dual boot. Things might\\nbreak after dual booting. Maybe the Wi-Fi card driver is not working, or\\ngraphics card config is wrong, or the pointer device is unusable. You will need\\nanother device to access your notes or search the Internet for answers.\\n\\n## Preparation in Windows\\n\\nLet\'s start!\\n\\nThe first step is to prepare for dual boot. All the steps in this stage are done\\nwithin the Windows. There is no specific order for these steps and no need to do\\nit in 1 sitting. I had my laptop running on Windows, so all the preparation are\\ndone in Windows.\\n\\n- UEFI, not BIOS\\n  - On Windows: `System Information` \u2192 `BIOS Mode` = `UEFI` instead of `Legacy`\\n  - `UEFI` is required for secure boot, GUID partition table (GPT) t\'s faster,\\n    and many other features\\n  - Read more here: https://itsfoss.com/check-uefi-or-bios/\\n- GPT, not MBR\\n  - On Windows: `Disk management` \u2192 `Create and format hard disk partitions` \u2192\\n    right-click disk \u2192 `Properties` \u2192 `Volume` \u2192 `Partition style` =\\n    `GUID Partition Table (GPT)`\\n  - Read more here: https://itsfoss.com/check-mbr-or-gpt/\\n- Use [Rufus](https://rufus.ie/en/) to create the bootable USB\\n  - Get the [Ubuntu Desktop Image](https://ubuntu.com/download/desktop)\\n  - Partition scheme: Select `GPT`\\n  - Target System: Select `UEFI`\\n- Backup BitLocker recovery key\\n  - Make sure your BitLocker recovery key is saved to your Microsoft account, or\\n    any other ways of backing it up\\n  - Read more on how to back up in\\n    [Microsoft official guide](https://support.microsoft.com/en-us/windows/back-up-your-bitlocker-recovery-key-e63607b4-77fb-4ad3-8022-d6dc428fbd0d)\\n- Partition your disk\\n  - Assuming Windows now taking up the full disk, you will need to shrink the\\n    volume available to Windows and create space for Linux\\n  - Disable BitLocker\\n    - I had to disable BitLocker to shrink the Windows volume\\n    - Follow the on-screen instructions for each to decrypt and reboot, it will\\n      take some time\\n    - Read more on\\n      [this guide about resize BitLocker partition](https://www.diskpart.com/articles/resize-bitlocker-partition-windows-10-0725.html)\\n  - Partition\\n    - I used [AOMEI Partition Assistant](https://www.diskpart.com/download.html)\\n    - Read their\\n      [How to safely partition](https://www.diskpart.com/safely-partition.html)\\n      tutorial\\n    - Other guides I found useful:\\n      [Align partition](https://www.diskpart.com/help/align-partition.html),\\n      [PreOS Mode](https://www.diskpart.com/lib/PreOS-mode.html)\\n    - If you want to use the Disk Management tool from Windows but failed,\\n      [this post](https://answers.microsoft.com/en-us/windows/forum/all/windows-disk-management-unable-to-shrink-c-drive/217c3521-b254-4662-bac9-bc90dc633fab)\\n      might be helpful\\n  - Move `WinRe` partition after the Windows partition\\n    - This is the recovery partition for Windows to support failover\\n    - It is recommended to keep this as a separate partition and put it right\\n      after the Windows partition\\n    - Read more on\\n      [this post](https://learn.microsoft.com/en-us/answers/questions/1354739/the-recovery-partition-is-typically-created-at-the)\\n    - So what I had is [Windows | WinRe | Unused space (for Ubuntu later)]\\n\\n## Configure BIOS in the BIOS Menu\\n\\nJust to make sure a few things are set in the BIOS menu. Knowing how to get into\\nthe BIOS menu is also helpful in case of bad things happened.\\n\\nReboot the computer and enter the BIOS menu before the OS load. Search online\\nhow to do it for your computer. It\'s usually F2 or F12. For me is pressing Enter\\nwhen it says something like \\"Press Enter to interrupt\\".\\n\\nThings to check:\\n\\n- Make sure the UEFI BIOS is up-to-date\\n- SATA mode is `AHCI`, as Ubuntu doesn\'t support other operations\\n- Secure boot is enabled and CSM is disabled\\n  - It is required to install Ubuntu with secure boot enabled for secure boot to\\n    work with Ubuntu\\n  - CSM is to support non-UEFI OS. It should already be disabled with secure\\n    boot enabled\\n- Boot mode is UEFI only\\n- TPM security has to be enabled for BitLocker in Windows\\n- You can check the Boot order in the BIOS menu as well\\n\\n## Configure Ubuntu Partition\\n\\nThe important bits start here! From now on, it\'s better to do all remaining\\nsteps in one go.\\n\\nThis stage is to boot into Ubuntu with the live USB and configure the Ubuntu\\npartition that is encrypted.\\n\\n1. Boot the USB stick and select `Try without installing` when prompted\\n2. You should see the default Ubuntu desktop, open a terminal\\n3. In the terminal, change to root with\\n   ```bash\\n   sudo su\\n   ```\\n4. Check the partition table again\\n   1. Check with `sgdisk`\\n      ```bash\\n      sgdisk --print /dev/nvme0n1\\n      ```\\n   2. If your disk is not `/dev/nvme0n1`, then you will have to replace all the\\n      following commands to your disk name, e.g. `/dev/sda`\\n   3. Look for the disk name (e.g. `/dev/sda` or `/dev/nvme0n1`) not the\\n      partition name (e.g. `/dev/sda1` or `/dev/nvme0n1p1`)\\n5. Create 2 partitions in the empty space in your disk, one for boot and the\\n   rest for root\\n   1. New 1800M partition for boot\\n      ```bash\\n      sgdisk --new=5:0:+1800M /dev/nvme0n1\\n      ```\\n   2. New partition using the rest for root\\n      ```bash\\n      sgdisk --new=6:0:0 /dev/nvme0n1\\n      ```\\n   3. Name the partitions\\n      ```bash\\n      sgdisk --change-name=5:/boot --change-name=6:rootfs /dev/nvme0n1\\n      ```\\n   4. Choose 8300 as the type code for the file system (Linux filesystem)\\n      ```bash\\n      sgdisk --typecode=5:8300 --typecode=6:8300 /dev/nvme0n1\\n      ```\\n      (you can find all typecode with `sgdisk -L`)\\n   5. Make EXT4 file system (notice that here is the partition name)\\n      ```bash\\n      mkfs.ext4 -L boot /dev/nvme0n1p5\\n      ```\\n6. Encrypt the Linux data partition with LUKS\\n\\n   - In the following codeblock, I am showing the output as well\\n   - Lines after `#` are what needed to be inputted to the terminal\\n   - The passphrase you chose at this step is what you needed to decrypt the\\n     disk when booting\\n\\n   ```bash\\n   # cryptsetup luksFormat --type=luks2 /dev/nvme0n1p6\\n   WARNING!\\n   ========\\n   This will overwrite data on /dev/nvme0n1p6 irrevocably.\\n\\n   Are you sure? (Type uppercase yes): YES\\n   Enter passphrase for /dev/nvme0n1p6:\\n   Verify passphrase:\\n\\n   # cryptsetup open /dev/nvme0n1p6 nvme0n1p6_crypt\\n   Enter passphrase for /dev/nvme0n1p6:\\n\\n   # ls /dev/mapper/\\n   control nvme0n1p6_crypt\\n   ```\\n\\n7. Set up logical volume manager (LVM), with root, swap and home partition\\n   ```bash\\n   # pvcreate /dev/mapper/nvme0n1p6_crypt\\n   Physical volume \\"/dev/mapper/nvme0n1p6_crypt\\" successfully created.\\n   # vgcreate ubuntu-vg /dev/mapper/nvme0n1p6_crypt\\n   Volume group \\"ubuntu-vg\\" successfully created\\n   # lvcreate -L 64G -n root ubuntu-vg\\n   Logical volume \\"root\\" created.\\n   # lvcreate -L 16G -n swap ubuntu-vg\\n   Logical volume \\"swap\\" created.\\n   # lvcreate -l 100%FREE -n home ubuntu-vg\\n   Logical volume \\"home\\" created.\\n   ```\\n\\nNow all the Ubuntu partitions are prepared. Without exiting the live\\nenvironment, use the GUI to continue the installation.\\n\\n## Install Ubuntu\\n\\nWe will install Ubuntu on the encrypted disk and configure things to make sure\\nsecure boot also works.\\n\\n1. Run the graphical installer\\n2. Connect to your Wi-Fi network\\n3. On the software step, for \\"Other options\\" (This step is important for secure\\n   boot to work)\\n   1. Check the \\"Download updates\\" option\\n   2. Check the \\"Install third-party software for graphics and Wi-Fi hardware\\"\\n   3. Check the \\"Configure Secure Boot\\" option and enter a password, remember\\n      this password. Useful for the MOK management step explained below.\\n   4. Save and continue\\n4. When asked what to do with the disk, pick \\"Something else\\", or the option\\n   that allows you to manually assign disk partition\\n   1. Use the ~1800MB partition as `ext4` with mount point as `/boot`\\n   2. Use the `/dev/mapper/ubuntu-vg-root` as `ext4` FS and mount it to `/`\\n   3. Use the `/dev/mapper/ubuntu-vg-home` as `ext4` FS and mount it to `/home`\\n   4. Use the `/dev/mapper/ubuntu-vg-swap` as `swap`\\n   5. Do the same as above if you have more or less partitions\\n   6. The bootloader device should be `/dev/nvme0n1`\\n5. Proceed with the installation\\n6. When finished, select `Continue Testing`, and it should bring you back to the\\n   Ubuntu Desktop environment\\n\\nDo not leave the live environment just yet.\\n\\n## Set up `crypttab`\\n\\n`crypttab` is used to decrypt the disk on boot.\\n\\n1. Open the terminal and find the UUID of the partition with LUKS\\n   ```bash\\n   sudo blkid /dev/nvme0n1p6\\n   ```\\n   Example output:\\n   ```\\n   /dev/nvme0n1p6: UUID=\\"abcdefgh-1234-5678-9012-abcdefghijklm\\" TYPE=\\"crypto_LUKS\\"\\n   ```\\n   I suggest writing the UUID down somewhere\\n2. Mount the drives and chroot into the mount:\\n\\n   ```bash\\n   mount /dev/mapper/ubuntu-vg-root /target\\n   mount /dev/nvme0n1p5 /target/boot\\n   for n in proc sys dev etc/resolv.conf; do mount --rbind /$n /target/$n; done\\n   chroot /target\\n\\n   mount -a\\n   ```\\n\\n3. Configure `/etc/crypttab`:\\n\\n   ```\\n   # <target name> <source device> <key file> <options>\\n   # options used:\\n   #     luks    - specifies that this is a LUKS encrypted device\\n   #     tries=0 - allows to re-enter password unlimited number of times\\n   #     discard - allows SSD TRIM command, WARNING: potential security risk (more: \\"man crypttab\\")\\n   #     loud    - display all warnings\\n   nvme0n1p6_crypt UUID=abcdefgh-1234-5678-9012-abcdefghijklm none luks,discard\\n   ```\\n\\n4. Apply the changes (still inside chroot)\\n   ```bash\\n   update-initramfs -k all -c\\n   ```\\n\\n## Reboot and some remaining issues\\n\\n### Blue screen MOK management\\n\\n1. When reboot, because of the secure boot, you will see a blue screen and ask\\n   to perform MOK management\\n2. Choose Enroll MOK, continue, yes\\n3. Input the password that you inputted on the step for software install during\\n   the installation for third party drivers\\n   - It won\'t show what you typed, trust that it\'s there\\n   - This is only a one time thing so no worries\\n   - Once successful you don\'t need the password anymore\\n\\n### Windows BitLocker Issue\\n\\nYou might need to input the BitLocker recovery key when booting into Windows.\\nFind your recovery key in where ever you saved (e.g. Microsoft account) and\\ninput it. This is also one time thing, so no worries.\\n\\nIf you have disabled BitLocker before to partition the disk, you will need to\\nre-enable it and encrypt the Windows partition again.\\n\\nTo encrypt again, you need to make sure you meet the pre-requisites to enable\\nBitLocker:\\n\\n- Check that the partition table is GPT\\n- BIOS is set to UEFI\\n- Secure boot is enabled\\n\\nGo to `System information` \u2192 scroll down and see device encryption support needs\\nto be `meets prerequisites`. If not, check the above again and maybe reboot and\\nsee.\\n\\nOnce the prerequisites are met, go to Settings \u2192 privacy & security \u2192 device\\nencryption and enable BitLocker.\\n\\nTo check the progress:\\n\\n- Open admin command prompt and input `manage-bde -status C:`\\n- If the status stuck, not updating, try `manage-bde -pause C:` and then\\n  `manage-bde -resume C:`\\n\\nWith BitLocker re-enabled, this means both Ubuntu and Windows have full disk\\nencryption and secure boot enabled!\\n\\n### Wrong timezone after dual boot\\n\\nYou might notice one of the OS show the wrong time before resyncing their time.\\nThis is because they store time into the computer hardware clock differently.\\nLinux assumes that the time on the hardware clock is stored in UTC and Windows\\nassumes it is local time. One solution is to ask Linux to store the hardware\\nclock as local time:\\n\\n```bash\\ntimedatectl set-local-rtc 1\\n```\\n\\n[Read more in this guide from It\'s Foss](https://itsfoss.com/wrong-time-dual-boot/)\\n\\n## References\\n\\n### About full disk encryption:\\n\\n- [How to Dual-Boot Ubuntu 20.04 (or 22.04) and Windows 10 (or 11) with Encryption | Mike Kasberg](https://www.mikekasberg.com/blog/2020/04/08/dual-boot-ubuntu-and-windows-with-encryption.html) -\\n  recommend reading\\n- [Dual boot with encryption nodes | GitHub Gist from @luispabon](https://gist.github.com/luispabon/db2c9e5f6cc73bb37812a19a40e137bc)\\n\\n### About secure boot:\\n\\n- [Can I enable secure boot again? | Reddit](https://www.reddit.com/r/linux4noobs/comments/osotp3/ubuntu_dual_boot_with_windows_10_can_i_enable/) -\\n  Ans: no\\n- [A Clean Install of Linux Ubuntu 20.04 (Lenovo UEFI BIOS with Secure Boot and MOK) | YouTube](https://youtu.be/GqJBniwj1Mg) -\\n  worth watching parts about the secure boot and MOK step\\n- [It is possible to dual boot Linux and Windows 10 with secure boot enabled? | Ask Ubuntu](https://askubuntu.com/questions/880240/it-is-possible-to-dual-boot-linux-and-windows-10-with-secure-boot-enabled) -\\n  Ans: yes\\n\\n### About partition and BitLocker:\\n\\n- [Windows Disk Management unable to shrink C: drive volume](https://answers.microsoft.com/en-us/windows/forum/all/windows-disk-management-unable-to-shrink-c-drive/217c3521-b254-4662-bac9-bc90dc633fab)\\n- [How can I resize BitLocker partition in Windows 10/11](https://www.diskpart.com/articles/resize-bitlocker-partition-windows-10-0725.html)\\n- [Dual Booting Ubuntu with Windows 10 Pro with BitLocker Encryption](https://itsfoss.com/dual-boot-ubuntu-windows-bitlocker/)\\n\\nThat\'s it and I hope you can set up dual boot without issues!"}]}}')}}]);