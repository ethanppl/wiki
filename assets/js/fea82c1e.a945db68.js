"use strict";(self.webpackChunkmy_wiki=self.webpackChunkmy_wiki||[]).push([[4574],{2604:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var i=s(5893),t=s(1151);const r={},o="Software Design",a={id:"computers/programming/software-design/software-design",title:"Software Design",description:"Design/architect software applications/systems.",source:"@site/docs/computers/programming/software-design/software-design.md",sourceDirName:"computers/programming/software-design",slug:"/computers/programming/software-design/",permalink:"/wiki/computers/programming/software-design/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Zig",permalink:"/wiki/computers/programming/languages/zig"},next:{title:"Conferences",permalink:"/wiki/computers/programming/software-design/conferences"}},l={},c=[{value:"Notes",id:"notes",level:2},{value:"Resources",id:"resources",level:2},{value:"Sites",id:"sites",level:2},{value:"Links",id:"links",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"software-design",children:"Software Design"}),"\n",(0,i.jsx)(n.p,{children:"Design/architect software applications/systems."}),"\n",(0,i.jsx)(n.p,{children:"Related pages:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/computers/cybersecurity",children:"Computers / Cybersecurity"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/computers/database",children:"Computers / Database"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/computers/network",children:"Computers / Network"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://data-oriented.design/",children:"Data-Oriented Design Principles"})," \u2014 The purpose\nof all programs is to transform data from one form to another."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://architectelevator.com/architecture/architect-bookshelf/",children:"The Architect's Bookshelf | Gregor Hohpe"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A collection of books about software architecture"}),"\n",(0,i.jsx)(n.li,{children:"Going from single components to connected components, to entire systems, and\ndealing with the context"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://aosabook.org/en/index.html",children:"Architectures of Open Source Application"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"4 volumes, the authors of open source applications explain how their open\nsource software is structured and why"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://interviewing.io/guides/system-design-interview/part-two",children:"A Guide to System Design Interview"}),"\n(",(0,i.jsx)(n.a,{href:"https://news.ycombinator.com/item?id=34999464",children:"HN"}),")","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"There are two parts, how to approach an interview and the fundamental\nconcept"}),"\n",(0,i.jsx)(n.li,{children:"A bit too much prologue but can just scroll to the key points and the\nfundamental concept part"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"sites",children:"Sites"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://refactoring.guru/design-patterns",children:"Refactoring Guru - Design Patterns"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Benefits, criticism, history, classification of patterns"}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://refactoring.guru/design-patterns/catalog",children:"A collection of creational, structural, and behavioural design patterns"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/kdeldycke/awesome-falsehood",children:"awesome-falsehood | GitHub @kdeldycke"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A curated list of falsehoods programmers believes to be true but isn't"}),"\n",(0,i.jsx)(n.li,{children:"About dates, emails, names, all kinds of stuff"}),"\n",(0,i.jsxs)(n.li,{children:["The article that started it all:\n",(0,i.jsx)(n.a,{href:"https://www.kalzumeus.com/2010/06/17/falsehoods-programmers-believe-about-names/",children:"falsehood programmers believe about names"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/ByteByteGoHq/system-design-101",children:"Byte-sized System Design Concepts | GitHub @ByteByteGoHq"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"System design 101 with visuals and simpler terms"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"links",children:"Links"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://www.exhypothesi.com/clocks-and-causality/",children:"Clocks and Causality - Ordering Events in Distributed Systems"}),"\n(",(0,i.jsx)(n.a,{href:"https://news.ycombinator.com/item?id=35399603",children:"HN"}),")","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"How logical clocks order events in distributed systems"}),"\n",(0,i.jsx)(n.li,{children:"Clocks introduced: Lamport clock, Lamport origin clock, vector clock and\ndotted vector clock, Lamport causal clock"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://martinfowler.com/bliki/ConwaysLaw.html",children:"Conway's Law"}),"\n(",(0,i.jsx)(n.a,{href:"https://news.ycombinator.com/item?id=35591026",children:"HN"}),")","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'"Any organization that designs a system (defined broadly) will produce a\ndesign whose structure is a copy of the organization\'s communication\nstructure."'}),"\n",(0,i.jsx)(n.li,{children:"Projects plans should follow how people communicate in the organization"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://samwho.dev/load-balancing/",children:"Load balancing algorithms"}),"\n(",(0,i.jsx)(n.a,{href:"https://news.ycombinator.com/item?id=35588797",children:"HN"}),")","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A little bit of Bartosz Ciechanowski style visualizing load balancing\nalgorithms, with a playground at the end"}),"\n",(0,i.jsx)(n.li,{children:"Round robin, weighted random, weighted round robin, least connections, peak\nEWMA"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/juspay/hyperswitch/wiki/Payments-101-for-a-Developer",children:"Payments 101 for a developer"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A guide for developers developing systems involving the transfer of money.\nThe common terminologies and concepts."}),"\n",(0,i.jsx)(n.li,{children:"Terminologies: merchant, issuer, acquirer, network or scheme, payment\nprocessor, PCI compliance, GDPR compliance, etc."}),"\n",(0,i.jsx)(n.li,{children:"Concepts: intent to pay, data collection, authentication, authorization,\nstatus validation, dispute, refund, settlement, etc."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://cerebralab.com/Imaginary_Problems_Are_the_Root_of_Bad_Software",children:"Imaginary Problems Are the Root of Bad Software"}),"\n(",(0,i.jsx)(n.a,{href:"https://news.ycombinator.com/item?id=36380711",children:"HN"}),")","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Imaginary problems are more fun to solve than the real problems"}),"\n",(0,i.jsx)(n.li,{children:"Optimizing over some details and losing sight of the real issues"}),"\n",(0,i.jsx)(n.li,{children:"The HN thread is also worth a read: it's the industry that encourages people\nto look for imaginary problems"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://matduggan.com/were-all-doing-metrics-wrong/",children:"Monitoring is a Pain | Mathew Duggan"}),"\n(",(0,i.jsx)(n.a,{href:"https://news.ycombinator.com/item?id=36469147",children:"HN"}),")","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Good monitoring requires a lot of work, costs a lot and often has a high\nnoise-to-signal ratio"}),"\n",(0,i.jsx)(n.li,{children:"Tackle the 3 major aspects: logging, metrics and tracing"}),"\n",(0,i.jsx)(n.li,{children:"Common pitfalls, author's experience, benefits and drawbacks of each"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://jmmv.dev/2023/06/fast-machines-slow-machines.html",children:"Fast machines, slow machines | Julio Merino"}),"\n(",(0,i.jsx)(n.a,{href:"https://news.ycombinator.com/item?id=36503983",children:"HN"}),")","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Command prompt, notepad, file explorer and Paint all start faster in Windows\n2000 than in Windows 11"}),"\n",(0,i.jsx)(n.li,{children:"While hardware has improved for faster machines, software degraded"}),"\n",(0,i.jsx)(n.li,{children:"Cross-platform technologies and interpreted language contribute to slow\nsoftware, particularly startup time"}),"\n",(0,i.jsx)(n.li,{children:"The issue is we are capable to do it but deprioritizing it. Soon, the\nhardware advances are eaten away by poor software designs"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://jcs.org/2023/07/12/api",children:"Advice for Operating a Public-Facing API | Joshua Stein"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Host the API on a separate hostname: for different scaling & security\nmeasures"}),"\n",(0,i.jsx)(n.li,{children:"Don't be too liberal in what you accept: strict API design, no workarounds,\notherwise risk breaking changes down the road"}),"\n",(0,i.jsx)(n.li,{children:"Avoid OAuth and prefer static API tokens for simplicity"}),"\n",(0,i.jsx)(n.li,{children:"Stay on top of failures: hopefully, users can handle the failure themselves\nand fix their app"}),"\n",(0,i.jsx)(n.li,{children:"Others: log a unique ID, descriptive error responses, prefixed tokens,"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://bpapillon.com/post/feature-flags-theory-vs-reality/",children:"Feature Flags: Theory vs Reality"}),"\n\u2014 Problems and possible ways to better manage feature flags"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://www.mermaidchart.com/blog/posts/sequence-diagrams-the-good-thing-uml-brought-to-software-development",children:"Sequence Diagrams | Mermaid Chart"}),"\n(",(0,i.jsx)(n.a,{href:"https://news.ycombinator.com/item?id=36342931",children:"HN"}),")","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'Sequence diagram: visualize the dynamic flow of messages across systems. Map\nout "black boxes" and show how they interact'}),"\n",(0,i.jsx)(n.li,{children:"Start with happy paths and then add edge cases. The flow of the happy path\nshould remain as the anchor for other edge cases"}),"\n",(0,i.jsx)(n.li,{children:"Comprehensiveness is the enemy of comprehensibility: the code is the best\nsource of comprehensiveness, keep the diagrams simple for effective\ncommunication"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://dev.to/stripe/common-design-patterns-at-stripe-1hb4",children:"Common design pattern at Stripe"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Patterns for designing APIs, part 4 of\n",(0,i.jsx)(n.a,{href:"https://dev.to/paulasjes/series/19794",children:"Designing APIs for Humans"})]}),"\n",(0,i.jsx)(n.li,{children:"Prefer enums over boolean (making impossible states impossible), nested\nobject for extensibility"}),"\n",(0,i.jsx)(n.li,{children:"Do not enforce security through obscurity, make IDs unguessable, but prefix\nID with an entity name"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://blog.danslimmon.com/2023/08/11/squeeze-the-hell-out-of-the-system-you-have/",children:"Squeeze the hell out of the system you have | Dan Slimmon"}),"\n(",(0,i.jsx)(n.a,{href:"https://news.ycombinator.com/item?id=37091983",children:"HN"}),")","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Increasing the complexity costs time, effort as well as attention required\nfor all future decisions"}),"\n",(0,i.jsx)(n.li,{children:"Until reaching the fundamental limit of the current (dumb) system, try to\noptimize and squeeze as much as possible"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://andydote.co.uk/2023/09/19/tracing-is-better/",children:"Tracing: structured logging, but better in every way"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Log levels is not useful, messages can be better if structured, ",(0,i.jsx)(n.code,{children:"stdout"})," is\nmixed"]}),"\n",(0,i.jsx)(n.li,{children:"No relationship between lines, no timing/duration but only timestamps,\nquerying logs is ineffective and hard"}),"\n",(0,i.jsx)(n.li,{children:"Contains an example of how to evolve the system to use OpenTelemetry Tracing"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://adriano.fyi/posts/2023-09-24-choose-postgres-queue-technology/",children:"Choose Postgres Queue Technology"}),"\n(",(0,i.jsx)(n.a,{href:"https://news.ycombinator.com/item?id=37636841",children:"HN"}),")","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Not specifically about Postgres queue, but the cult of prioritizing\nscalability over other things"}),"\n",(0,i.jsx)(n.li,{children:"Build boring technology: If and only if the boring technology is unable to\nmeet demands should alternatives be considered"}),"\n",(0,i.jsx)(n.li,{children:"Build escape hatches: abstractions (adapters) to make it easy to replace"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://jakelazaroff.com/words/an-interactive-intro-to-crdts/",children:"An Interactive Intro to CRDTs"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"CRDTs, data structure that guarantee eventual consistency"}),"\n",(0,i.jsx)(n.li,{children:"Examples with last write win register and last write win map"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://encore.dev/blog/retries",children:"Retries"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Visualizing how to design retry mechanisms, with exponential backoff and\njitter"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://sudhir.io/the-big-little-guide-to-message-queues",children:"The Big Little Guide to Message Queues"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"What are message queues? When to and when not to use queues?"}),"\n",(0,i.jsx)(n.li,{children:"Delivery guarantees: at-least-once, at-most-once, exactly-once"}),"\n",(0,i.jsx)(n.li,{children:"Ordering vs parallelism, and parallel doesn't mean random"}),"\n",(0,i.jsx)(n.li,{children:"Fan out/in design, and the use of topics on top of queues"}),"\n",(0,i.jsx)(n.li,{children:"Consideration of poison pills and dead letters queue"}),"\n",(0,i.jsx)(n.li,{children:"Common implementation: AWS SNS/SQS, Redis Streams, Kafka, RabbitMQ, etc."}),"\n"]}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>a,a:()=>o});var i=s(7294);const t={},r=i.createContext(t);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);