"use strict";(self.webpackChunkmy_wiki=self.webpackChunkmy_wiki||[]).push([[4574],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>d});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),p=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=p(a),h=n,d=u["".concat(l,".").concat(h)]||u[h]||c[h]||i;return a?r.createElement(d,o(o({ref:t},m),{},{components:a})):r.createElement(d,o({ref:t},m))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:n,o[1]=s;for(var p=2;p<i;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},2736:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=a(7462),n=(a(7294),a(3905));const i={},o="Software Design",s={unversionedId:"computers/programming/software-design/software-design",id:"computers/programming/software-design/software-design",title:"Software Design",description:"Design/architect software applications/systems.",source:"@site/docs/computers/programming/software-design/software-design.md",sourceDirName:"computers/programming/software-design",slug:"/computers/programming/software-design/",permalink:"/wiki/computers/programming/software-design/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Zig",permalink:"/wiki/computers/programming/languages/zig"},next:{title:"Conferences",permalink:"/wiki/computers/programming/software-design/conferences"}},l={},p=[{value:"Notes",id:"notes",level:2},{value:"Resources",id:"resources",level:2},{value:"Sites",id:"sites",level:2},{value:"Links",id:"links",level:2}],m={toc:p},u="wrapper";function c(e){let{components:t,...a}=e;return(0,n.kt)(u,(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"software-design"},"Software Design"),(0,n.kt)("p",null,"Design/architect software applications/systems."),(0,n.kt)("p",null,"Related pages:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/computers/cybersecurity"},"Computers / Cybersecurity")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/computers/database"},"Computers / Database")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/computers/network"},"Computers / Network"))),(0,n.kt)("h2",{id:"notes"},"Notes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://data-oriented.design/"},"Data-Oriented Design Principles")," \u2014 The purpose\nof all programs is to transform data from one form to another.")),(0,n.kt)("h2",{id:"resources"},"Resources"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://architectelevator.com/architecture/architect-bookshelf/"},"The Architect's Bookshelf | Gregor Hohpe"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"A collection of books about software architecture"),(0,n.kt)("li",{parentName:"ul"},"Going from single components to connected components, to entire systems, and\ndealing with the context"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://aosabook.org/en/index.html"},"Architectures of Open Source Application"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"4 volumes, the authors of open source applications explain how their open\nsource software is structured and why"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://interviewing.io/guides/system-design-interview/part-two"},"A Guide to System Design Interview"),"\n(",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=34999464"},"HN"),")",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"There are two parts, how to approach an interview and the fundamental\nconcept"),(0,n.kt)("li",{parentName:"ul"},"A bit too much prologue but can just scroll to the key points and the\nfundamental concept part")))),(0,n.kt)("h2",{id:"sites"},"Sites"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://refactoring.guru/design-patterns"},"Refactoring Guru - Design Patterns"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Benefits, criticism, history, classification of patterns"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://refactoring.guru/design-patterns/catalog"},"A collection of creational, structural, and behavioural design patterns")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/kdeldycke/awesome-falsehood"},"awesome-falsehood | GitHub @kdeldycke"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"A curated list of falsehoods programmers believes to be true but isn't"),(0,n.kt)("li",{parentName:"ul"},"About dates, emails, names, all kinds of stuff"),(0,n.kt)("li",{parentName:"ul"},"The article that started it all:\n",(0,n.kt)("a",{parentName:"li",href:"https://www.kalzumeus.com/2010/06/17/falsehoods-programmers-believe-about-names/"},"falsehood programmers believe about names"))))),(0,n.kt)("h2",{id:"links"},"Links"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"YouTube:\n",(0,n.kt)("a",{parentName:"li",href:"https://youtu.be/IcgmSRJHu_8"},"Making impossible states impossible | elm-conf"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Better domain modelling, design data types around the real-world domain"),(0,n.kt)("li",{parentName:"ul"},"Understanding union type, zip list, opaque type"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.exhypothesi.com/clocks-and-causality/"},"Clocks and Causality - Ordering Events in Distributed Systems"),"\n(",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=35399603"},"HN"),")",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"How logical clocks order events in distributed systems"),(0,n.kt)("li",{parentName:"ul"},"Clocks introduced: Lamport clock, Lamport origin clock, vector clock and\ndotted vector clock, Lamport causal clock"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://martinfowler.com/bliki/ConwaysLaw.html"},"Conway's Law"),"\n(",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=35591026"},"HN"),")",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},'"Any organization that designs a system (defined broadly) will produce a\ndesign whose structure is a copy of the organization\'s communication\nstructure."'),(0,n.kt)("li",{parentName:"ul"},"Projects plans should follow how people communicate in the organization"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://samwho.dev/load-balancing/"},"Load balancing algorithms"),"\n(",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=35588797"},"HN"),")",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"A little bit of Bartosz Ciechanowski style visualizing load balancing\nalgorithms, with a playground at the end"),(0,n.kt)("li",{parentName:"ul"},"Round robin, weighted random, weighted round robin, least connections, peak\nEWMA"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/juspay/hyperswitch/wiki/Payments-101-for-a-Developer"},"Payments 101 for a developer"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"A guide for developers developing systems involving the transfer of money.\nThe common terminologies and concepts."),(0,n.kt)("li",{parentName:"ul"},"Terminologies: merchant, issuer, acquirer, network or scheme, payment\nprocessor, PCI compliance, GDPR compliance, etc."),(0,n.kt)("li",{parentName:"ul"},"Concepts: intent to pay, data collection, authentication, authorization,\nstatus validation, dispute, refund, settlement, etc."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://cerebralab.com/Imaginary_Problems_Are_the_Root_of_Bad_Software"},"Imaginary Problems Are the Root of Bad Software"),"\n(",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=36380711"},"HN"),")",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Imaginary problems are more fun to solve than the real problems"),(0,n.kt)("li",{parentName:"ul"},"Optimizing over some details and losing sight of the real issues"),(0,n.kt)("li",{parentName:"ul"},"The HN thread is also worth a read: it's the industry that encourages people\nto look for imaginary problems"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://matduggan.com/were-all-doing-metrics-wrong/"},"Monitoring is a Pain | Mathew Duggan"),"\n(",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=36469147"},"HN"),")",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Good monitoring requires a lot of work, costs a lot and often has a high\nnoise-to-signal ratio"),(0,n.kt)("li",{parentName:"ul"},"Tackle the 3 major aspects: logging, metrics and tracing"),(0,n.kt)("li",{parentName:"ul"},"Common pitfalls, author's experience, benefits and drawbacks of each"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://jmmv.dev/2023/06/fast-machines-slow-machines.html"},"Fast machines, slow machines | Julio Merino"),"\n(",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=36503983"},"HN"),")",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Command prompt, notepad, file explorer and Paint all start faster in Windows\n2000 than in Windows 11"),(0,n.kt)("li",{parentName:"ul"},"While hardware has improved for faster machines, software degraded"),(0,n.kt)("li",{parentName:"ul"},"Cross-platform technologies and interpreted language contribute to slow\nsoftware, particularly startup time"),(0,n.kt)("li",{parentName:"ul"},"The issue is we are capable to do it but deprioritizing it. Soon, the\nhardware advances are eaten away by poor software designs"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://jcs.org/2023/07/12/api"},"Advice for Operating a Public-Facing API | Joshua Stein"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Host the API on a separate hostname: for different scaling & security\nmeasures"),(0,n.kt)("li",{parentName:"ul"},"Don't be too liberal in what you accept: strict API design, no workarounds,\notherwise risk breaking changes down the road"),(0,n.kt)("li",{parentName:"ul"},"Avoid OAuth and prefer static API tokens for simplicity"),(0,n.kt)("li",{parentName:"ul"},"Stay on top of failures: hopefully, users can handle the failure themselves\nand fix their app"),(0,n.kt)("li",{parentName:"ul"},"Others: log a unique ID, descriptive error responses, prefixed tokens,"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://bpapillon.com/post/feature-flags-theory-vs-reality/"},"Feature Flags: Theory vs Reality"),"\n\u2014 Problems and possible ways to better manage feature flags"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.mermaidchart.com/blog/posts/sequence-diagrams-the-good-thing-uml-brought-to-software-development"},"Sequence Diagrams | Mermaid Chart"),"\n(",(0,n.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=36342931"},"HN"),")",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},'Sequence diagram: visualize the dynamic flow of messages across systems. Map\nout "black boxes" and show how they interact'),(0,n.kt)("li",{parentName:"ul"},"Start with happy paths and then add edge cases. The flow of the happy path\nshould remain as the anchor for other edge cases"),(0,n.kt)("li",{parentName:"ul"},"Comprehensiveness is the enemy of comprehensibility: the code is the best\nsource of comprehensiveness, keep the diagrams simple for effective\ncommunication"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://dev.to/stripe/common-design-patterns-at-stripe-1hb4"},"Common design pattern at Stripe"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Patterns for designing APIs, part 4 of\n",(0,n.kt)("a",{parentName:"li",href:"https://dev.to/paulasjes/series/19794"},"Designing APIs for Humans")),(0,n.kt)("li",{parentName:"ul"},"Prefer enums over boolean (making impossible states impossible), nested\nobject for extensibility"),(0,n.kt)("li",{parentName:"ul"},"Do not enforce security through obscurity, make IDs unguessable, but prefix\nID with an entity name")))))}c.isMDXComponent=!0}}]);