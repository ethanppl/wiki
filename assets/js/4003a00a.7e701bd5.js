"use strict";(self.webpackChunkmy_wiki=self.webpackChunkmy_wiki||[]).push([[7026],{8076:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"computers/database/database","title":"Database","description":"Store and query data.","source":"@site/docs/computers/database/01-database.md","sourceDirName":"computers/database","slug":"/computers/database/database","permalink":"/computers/database/database","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Cybersecurity","permalink":"/computers/cybersecurity"},"next":{"title":"Postgres Database","permalink":"/computers/database/postgres"}}');var i=t(4848),r=t(8453);const a={},l="Database",o={},c=[{value:"Resources",id:"resources",level:2},{value:"Links",id:"links",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"database",children:"Database"})}),"\n",(0,i.jsx)(n.p,{children:"Store and query data."}),"\n",(0,i.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Database_normalization",children:"Database Normalization | Wikipedia"}),"\n\u2014 Structuring relational database for data integrity"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://tontinton.com/posts/database-fundementals/",children:"Database Fundamentals"}),"\n(",(0,i.jsx)(n.a,{href:"https://news.ycombinator.com/item?id=38655066",children:"HN"}),")","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The fundamental problems in the world of databases and common approaches to\nsolve them"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"links",children:"Links"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://soatok.blog/2023/03/01/database-cryptography-fur-the-rest-of-us/",children:"Database Cryptography Fur the Rest of Us | Soatok"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A guide to the difficulty and possible solution for database encryption"}),"\n",(0,i.jsx)(n.li,{children:"Confused deputies, canonicalization attacks, multi-tenancy, and the\nadditional complexity in NoSQL databases"}),"\n",(0,i.jsx)(n.li,{children:"Searchable encryption: order-preserving or order-revealing encryption,\ndeterministic encryption, homomorphic encryption, searchable symmetric\nencryption, HMAC"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://www.figma.com/blog/how-figma-scaled-to-multiple-databases/",children:"How Figma Scaled to Multiple Databases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Tactical fixes: upgrade RDS, read replicas, new DB for new use cases, add\nPgBouncer"}),"\n",(0,i.jsx)(n.li,{children:"Vertical partition: Move groups of tables onto different databases"}),"\n",(0,i.jsx)(n.li,{children:"A detailed description of how the migration was done to limit the\navailability impact to <1 minute"}),"\n",(0,i.jsx)(n.li,{children:"PgBouncer to redirect traffic. Logical replication to copy tables. LSNs to\nverify synchronization."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/getlago/lago/wiki/Is-ORM-still-an-%27anti-pattern%27%3F",children:"Is ORM still an 'anti-pattern'? | GitHub @getlago"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The paradigm mismatch between ORM data representation and relational data\nmodel, directed pointers vs. undirected graphs"}),"\n",(0,i.jsx)(n.li,{children:"Efficiency: The real issue is ORMs encourage poor practices. Data loaders\ncan handle N+1 problems in ORMs"}),"\n",(0,i.jsx)(n.li,{children:"Visibility problem: Translating SQL error to ORM error confuses developers"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://www.avestura.dev/blog/explaining-the-postgres-meme",children:"Explaining the Postgres Meme"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"There are numerous concepts in the iceberg meme of database"}),"\n",(0,i.jsx)(n.li,{children:"More like explaining database concepts using Postgres as an example"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://laplab.me/posts/inside-new-query-engine-of-mongodb/",children:"Inside the New Query Engine of MongoDB | Nikita Lapkov"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A writeup of the rewrite of the query execution engine in MongoDB version\n7.0"}),"\n",(0,i.jsx)(n.li,{children:"2 major reasons for rewrite and the idea of a Slot Based Engine"}),"\n",(0,i.jsx)(n.li,{children:"Architecture, data flow and compiler for the slot based engine"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://www.epsio.io/blog/how-to-create-a-streaming-sql-engine",children:"How to create a Streaming SQL Engine | Episo"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Streaming SQL Engine: keep queries' results up to date without recalculating"}),"\n",(0,i.jsxs)(n.li,{children:["Nodes processing messages in a format of ",(0,i.jsx)(n.code,{children:"(key: modification)"}),", can perform\nfiltering, join, group by, etc."]}),"\n",(0,i.jsx)(n.li,{children:"Indexes and caching can optimize up to a point that they can't and streaming\nSQL engine just solves it"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://shekhargulati.com/2022/07/08/my-notes-on-gitlabs-postgres-schema-design/",children:"My Notes on GitLab's Postgres Schema Design | Shekhar Gulati"}),"\n(",(0,i.jsx)(n.a,{href:"https://news.ycombinator.com/item?id=39413972",children:"HN"}),")","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["GitLab uses either ",(0,i.jsx)(n.code,{children:"serial"})," or ",(0,i.jsx)(n.code,{children:"bigserial"})," for primary keys, no UUID"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"text"})," type with ",(0,i.jsx)(n.code,{children:"CHECK"})," constraint to define length constraints"]}),"\n",(0,i.jsx)(n.li,{children:"Use foreign key constraints except for immutable tables like logs and events"}),"\n",(0,i.jsxs)(n.li,{children:["Partitioning on big tables to improve performance, e.g. ",(0,i.jsx)(n.code,{children:"PARTITION BY RANGE"}),"\nfor time-series data"]}),"\n",(0,i.jsxs)(n.li,{children:["Trigram text search with ",(0,i.jsx)(n.code,{children:"pg_trm"})," for faster ",(0,i.jsx)(n.code,{children:"LIKE"})," search"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"updated_at"})," only for tables that can be modified"]}),"\n",(0,i.jsxs)(n.li,{children:["Enums are ",(0,i.jsx)(n.code,{children:"smallint"})," rather than ",(0,i.jsx)(n.code,{children:"character varying"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://sqlite.org/draft/whybytecode.html",children:"Why SQLite Uses Bytecode"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Bytecode implementation vs tree-of-objects implementation of the prepared\nstatement"}),"\n",(0,i.jsx)(n.li,{children:"Bytecode: smaller, faster, easier to understand & debug, can be run\nincrementally"}),"\n",(0,i.jsx)(n.li,{children:"Tree-of-objects: query planning can be tweaked at runtime, dynamically\nself-tuning, and easy to parallelize"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Soft delete"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.a,{href:"https://brandur.org/fragments/deleted-record-insert",children:["Easy, alternative soft deletion: ",(0,i.jsx)(n.code,{children:"deleted_record_insert"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Hard delete and create a function that dump into a schemaless table"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://www.cultured.systems/2024/04/24/Soft-delete/",children:"Avoid the soft delete anti-pattern"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Few alternatives proposed, e.g. add state, temp table, use data warehouse"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"SQL"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://stackoverflow.com/questions/12102200/get-records-with-max-value-for-each-group-of-grouped-sql-results",children:"Get records with max value for each group of grouped SQL results"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Just a page that I keep coming back to"}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var s=t(6540);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);