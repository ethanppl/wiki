"use strict";(self.webpackChunkmy_wiki=self.webpackChunkmy_wiki||[]).push([[4604],{483:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"computers/database/postgres","title":"Postgres Database","description":"A free and open-source relational database.","source":"@site/docs/computers/database/postgres.md","sourceDirName":"computers/database","slug":"/computers/database/postgres","permalink":"/computers/database/postgres","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Database","permalink":"/computers/database/database"},"next":{"title":"Keyboard","permalink":"/computers/keyboard"}}');var i=s(4848),a=s(8453);const r={},o="Postgres Database",l={},c=[{value:"Resources",id:"resources",level:2},{value:"Sites",id:"sites",level:2},{value:"Links",id:"links",level:2},{value:"Notes",id:"notes",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"postgres-database",children:"Postgres Database"})}),"\n",(0,i.jsx)(n.p,{children:"A free and open-source relational database."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Some helpful SQL for managing database in ",(0,i.jsx)(n.a,{href:"#notes",children:"notes"})]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.postgresqltutorial.com/",children:"PostgreSQL Tutorial"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://wiki.postgresql.org/wiki/Don%27t_Do_This",children:"Don't do this | wiki.postgresql.org"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Rules on things that should not be done even though supported, why and\nexceptions"}),"\n",(0,i.jsxs)(n.li,{children:["E.g., don't do ",(0,i.jsx)(n.code,{children:"NOT IN"}),", don't use ",(0,i.jsx)(n.code,{children:"BETWEEN"}),", just use ",(0,i.jsx)(n.code,{children:"timestampz"})," type,\njust use ",(0,i.jsx)(n.code,{children:"text"})," type"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"sites",children:"Sites"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.postgresql.org/docs/current/index.html",children:"PostgreSQL Docs"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://wiki.postgresql.org/wiki/Main_Page",children:"PostgreSQL Wiki"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://zaiste.net/posts/postgresql-primer-for-busy-people/",children:"PostgreSQL Primer for Busy People"}),"\n(A cheat sheet)"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/dhamaniasad/awesome-postgres",children:"awesome-postgres | GitHub @dhamaniasad"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"links",children:"Links"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://philbooth.me/blog/nine-ways-to-shoot-yourself-in-the-foot-with-postgresql",children:"Nine Ways to Shoot Yourself in the Foot with PostgreSQL"}),"\n(",(0,i.jsx)(n.a,{href:"https://news.ycombinator.com/item?id=35684220",children:"HN"}),")","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"work_mem"}),", functions and procedures, triggers, ",(0,i.jsx)(n.code,{children:"NOTIFY"}),", ",(0,i.jsx)(n.code,{children:"EXPLAIN_ANALYZE"}),",\nCTEs v.s. subqueries (debatable), recursive CTEs, missing indexes for\nforeign keys, ",(0,i.jsx)(n.code,{children:"="})," v.s. ",(0,i.jsx)(n.code,{children:"IS NOT DISTINCT FROM"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://blog.mastermind.dev/indexes-in-postgresql",children:"Understanding Database Indexes in PostgreSQL | Mastermind Dev"}),"\n(",(0,i.jsx)(n.a,{href:"https://news.ycombinator.com/item?id=35978757",children:"HN"}),")","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A guide on database indexes, how they work and what are the types (BTree,\nHash, GiST, SP-GiST, GIN, BRIN)"}),"\n",(0,i.jsx)(n.li,{children:"Different ways to index: basic, partial, expression, covering"}),"\n",(0,i.jsx)(n.li,{children:"Maintenance: detecting unused indexes, bloats (unused space) or duplicates"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://rlopzc.com/posts/securing-your-postgresql-db-with-roles--privileges/",children:"Securing PostgreSQL DB with Roles & Privileges | Romario"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Scope and implement roles and privileges in PostgreSQL"}),"\n",(0,i.jsxs)(n.li,{children:["Commands like ",(0,i.jsx)(n.code,{children:"CREATE"}),", ",(0,i.jsx)(n.code,{children:"GRANT"}),", ",(0,i.jsx)(n.code,{children:"ALTER DEFAULT PRIVILEGES"}),", and\n",(0,i.jsx)(n.code,{children:"REASSIGN OWNED"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://scalegrid.io/blog/using-jsonb-in-postgresql-how-to-effectively-store-index-json-data-in-postgresql/",children:"Using JSONB in PostgreSQL | ScaleGrid"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Includes patterns & antipatterns, data structures, operators & functions,\nindexing JSONB columns in Postgres"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://hakibenita.com/postgresql-unused-index-size",children:"The Unexpected Find That Freed 20GB of Unused Index Space"}),"\n(",(0,i.jsx)(n.a,{href:"https://news.ycombinator.com/item?id=37294793",children:"HN"}),")","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["A few tricks like ",(0,i.jsx)(n.code,{children:"pg_stat_all_indexes"})," and ",(0,i.jsx)(n.code,{children:"REINDEX"})," free up space"]}),"\n",(0,i.jsx)(n.li,{children:"Finding that Postgres index NULL values. Partial indexes can free up space"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://www.thenile.dev/blog/transaction-isolation-postgres",children:"Transaction Isolation in Postgres, explained"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"ACID - atomicity, consistency, isolation and durability"}),"\n",(0,i.jsx)(n.li,{children:"Isolation as defined in SQL 92 Standard: serializable isolation. Results of\nconcurrent transactions are the same as running them sequentially"}),"\n",(0,i.jsx)(n.li,{children:"Anomalies: dirty reads, non-repeatable reads, phantom reads"}),"\n",(0,i.jsx)(n.li,{children:"Postgres MVCC: anything lower than the lowest active XIDs, new versions of\nexisting rows and new rows are hidden"}),"\n",(0,i.jsx)(n.li,{children:"Postgres vacuuming: freeing XIDs for reuse since XIDs are limited to 32 bits"}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/postgres/postgres/tree/master/src/test/isolation",children:"Postgres isolation test suite"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://drew.silcock.dev/blog/how-postgres-stores-data-on-disk/",children:"How postgres stores data on disk"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Heap, segment, page, tuple"}),"\n",(0,i.jsxs)(n.li,{children:["Using the ",(0,i.jsx)(n.code,{children:"pageinspect"})," extension to see how data are stored"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://challahscript.com/what_i_wish_someone_told_me_about_postgres",children:"What I Wish Someone Told Me About Postgres"}),"\n(",(0,i.jsx)(n.a,{href:"https://news.ycombinator.com/item?id=42111896",children:"HN"}),")","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Normalization and general advices"}),"\n",(0,i.jsxs)(n.li,{children:["Making ",(0,i.jsx)(n.code,{children:"psql"})," useful: use pager, auto-completion, backslash shortcuts, copy\nto CSVs"]}),"\n",(0,i.jsx)(n.li,{children:"Common issues in indexes, locks, transactions, and JSONB"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,i.jsx)(n.p,{children:"Permissions"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Check privileges on tables\nSELECT *\nFROM information_schema.role_table_grants\nWHERE grantee = 'your_role_name';\n\n-- Check privileges on schema\n-- Check what privilges are granted on schemas\nSELECT\n  r.usename AS grantor,\n  e.usename AS grantee,\n  nspname,\n  privilege_type,\n  is_grantable\nFROM pg_namespace\nJOIN LATERAL (SELECT * FROM aclexplode(nspacl) AS x) a ON true\nJOIN pg_user e ON a.grantee = e.usesysid\nJOIN pg_user r ON a.grantor = r.usesysid\n\n-- Check the default privileges set for future objects\nSELECT pgn.nspname, pga.* FROM pg_default_acl pga\nLEFT JOIN pg_namespace pgn ON pga.defaclnamespace=pgn.oid;\n\n-- GRANT and REVOKE\nGRANT USAGE ON SCHEMA public TO new_user;\nGRANT USAGE ON ALL SEQUENCES IN SCHEMA public TO new_user;\nGRANT SELECT ON ALL TABLES IN SCHEMA schema_name TO new_user;\nGRANT SELECT, INSERT, UPDATE, DELETE ON special_schema.special_table TO new_user;\nREVOKE SELECT ON secrets FROM new_user;\n\n-- Alter owner\nALTER TABLE schema.table_name OWNER TO backend_app_migrations;\nALTER TYPE schema.type_name OWNER TO backend_app_migrations;\n\n-- GRANT read on all existing tables\nDO\n$do$\nDECLARE\n  sch text;\nBEGIN\n  FOR sch IN\n\tSELECT nspname FROM pg_namespace WHERE nspname NOT ILIKE 'pg_temp_%' AND nspname NOT ILIKE 'pg_toast%'\n    AND nspname <> 'pg_catalog' AND nspname <> 'information_schema'\n  LOOP\n    -- Grant access to existing schemas and tables\n    EXECUTE format($$ GRANT USAGE ON SCHEMA %I TO readaccess $$, sch);\n    EXECUTE format($$ GRANT SELECT ON ALL TABLES IN SCHEMA %I TO readaccess $$, sch);\n  END LOOP;\nEND;\n$do$;\n\n-- GRANT read on all future tables\nALTER DEFAULT PRIVILEGES FOR USER backend_app_migrations GRANT SELECT ON TABLES TO readaccess;\n\n-- Change password\nALTER ROLE <role_name_here> WITH PASSWORD 'strong-generated-password';\n"})}),"\n",(0,i.jsx)(n.p,{children:"Debug slow DB"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Check if any transaction is running for a long time\n-- Change the `WHERE` clause to find different kinds of activity\nSELECT *\nFROM pg_catalog.pg_stat_activity\nWHERE state = 'active';\n\n-- Check for uncommited PREPARED statements\nSELECT gid, prepared, owner,\ndatabase, transaction AS xmin\nFROM pg_prepared_xacts\nORDER BY age(transaction) DESC;\n\n-- If yes, and it's safe to kill, kill it by PID\nSELECT pg_cancel_backend(7489);\n\n-- Check stats on vacuuming\nSELECT schemaname, relname, n_tup_del, n_dead_tup, last_vacuum, last_autovacuum, *\nFROM pg_catalog.pg_stat_all_tables\nORDER BY n_dead_tup DESC;\n\n-- Vacuum and analyze the tables\nVACUUM VERBOSE ANALYZE syncable_entities, syncable_entity_syncs;\n\n-- Check connection stats\nSELECT usename, client_addr, count(*)\nFROM pg_stat_activity\nGROUP BY client_addr, usename\nORDER BY count DESC;\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var t=s(6540);const i={},a=t.createContext(i);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);